[
    {
        "id": "a5830067b341cbd9",
        "type": "tab",
        "label": "Home",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "e87d33c62fc606c8",
        "type": "tab",
        "label": "Line pressure control",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "a2e6abde87c3c115",
        "type": "tab",
        "label": "Produce",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "c1e582b2.7e3dc",
        "type": "tab",
        "label": "IGSS OPC UA Tests",
        "disabled": true,
        "info": ""
    },
    {
        "id": "577adf7330f55551",
        "type": "tab",
        "label": "OPC UA AAS",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "869cfb4518914541",
        "type": "tab",
        "label": "console",
        "disabled": true,
        "info": "https://moleculer.services/docs/0.13/moleculer-repl.html#content-inner",
        "env": []
    },
    {
        "id": "3fc007a97f3fcca5",
        "type": "tab",
        "label": "moleculer simple",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "3ce97bdb992ee0d1",
        "type": "tab",
        "label": "Discovery",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8eea00dd0fa2793b",
        "type": "tab",
        "label": "TQ01 loop control test",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "2a516f0293649552",
        "type": "group",
        "z": "a2e6abde87c3c115",
        "name": "Assets Sensors",
        "style": {
            "fill": "#ffC000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "55a90ea75bdf1ffc",
            "b0df24934cee3bbc",
            "86b433e968f1e72f",
            "ad803a65c77249c9"
        ],
        "x": 948,
        "y": 93,
        "w": 764,
        "h": 1114
    },
    {
        "id": "5f28ab2e8045f710",
        "type": "group",
        "z": "a2e6abde87c3c115",
        "name": "Assets Controllers",
        "style": {
            "fill": "#ffC000",
            "label": true
        },
        "nodes": [
            "f10df41018357765",
            "275351d1deafbdbd",
            "b355f8f0cdc6368e",
            "b3dc3e98c6700bcd"
        ],
        "x": 1788,
        "y": 93,
        "w": 904,
        "h": 1154
    },
    {
        "id": "92873329bc006b1f",
        "type": "group",
        "z": "a2e6abde87c3c115",
        "name": "Desenvolvendo",
        "style": {
            "fill": "#ff0000",
            "label": true
        },
        "nodes": [
            "eff39aabd40ed5ca"
        ],
        "x": 34,
        "y": 79,
        "w": 172,
        "h": 82
    },
    {
        "id": "24e10c133b467af2",
        "type": "group",
        "z": "a2e6abde87c3c115",
        "name": "Testando",
        "style": {
            "fill": "#ffC000",
            "label": true
        },
        "nodes": [
            "e11d97bb28623586"
        ],
        "x": 34,
        "y": 179,
        "w": 172,
        "h": 82
    },
    {
        "id": "66db1ca4c7b21fca",
        "type": "group",
        "z": "a2e6abde87c3c115",
        "name": "Produção",
        "style": {
            "fill": "#92d04f",
            "label": true
        },
        "nodes": [
            "4efe4dac33e0d43e"
        ],
        "x": 34,
        "y": 279,
        "w": 172,
        "h": 82
    },
    {
        "id": "470c6c293f51294b",
        "type": "group",
        "z": "a2e6abde87c3c115",
        "name": "Assets Actuators",
        "style": {
            "label": true,
            "fill": "#ffC000"
        },
        "nodes": [
            "3b7e7a078c921569",
            "da9948ae2cae9d9e",
            "4f34cf4508b0c96d",
            "201e1c1595fbf5df",
            "8de17ba9b6160bbc",
            "a69d88a61a140b67"
        ],
        "x": 2854,
        "y": 99,
        "w": 818,
        "h": 1128
    },
    {
        "id": "e12dad24f2e30dd7",
        "type": "group",
        "z": "e87d33c62fc606c8",
        "name": "Enable",
        "style": {
            "stroke": "#6f2fa0",
            "label": true,
            "color": "#6f2fa0",
            "fill": "#dbcbe7"
        },
        "nodes": [
            "a452b82778014e86",
            "e84c9b1630519ebb",
            "26637ac156a4f327",
            "e27cbfd3b3c0698e",
            "efefe14ecf28779d",
            "2c42739bbd909737",
            "8c0ae7a7c66042b1",
            "7c298a3ca28f4a0e",
            "13c790cf4c272916",
            "4abcbc41b2ea018b",
            "6674b447332b4bc5"
        ],
        "x": 14,
        "y": 19,
        "w": 712,
        "h": 202
    },
    {
        "id": "4480fb045a7f8d92",
        "type": "group",
        "z": "e87d33c62fc606c8",
        "name": "Control Loops",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ff7f7f",
            "fill-opacity": "0.36",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "0ecb355e2ba80579",
            "50d54d254aa0b5c3",
            "8a3f461ddf5ee468",
            "2a57b6c569510a01"
        ],
        "x": 14,
        "y": 239,
        "w": 712,
        "h": 142
    },
    {
        "id": "f73bca4c7b3fa24a",
        "type": "group",
        "z": "e87d33c62fc606c8",
        "name": "Reading PID4 params",
        "style": {
            "stroke": "#001f60",
            "fill": "#bfc7d7",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "42b8d27ec63bada8",
            "a45b2a2a102a24d9",
            "d15ef6302fb52c0d",
            "f532c38f90447c20",
            "a37bde095c692967",
            "1c60aaf00905a1e1",
            "1afe93092dc51211",
            "f1842a02f07c4d5a",
            "1e2cff52dbaaa463",
            "c5d7b4c6b586a7bb",
            "476c193aa2e5e17f",
            "334e612c8ba020f5",
            "df40d05c0b650acd",
            "d3f793525ba89886",
            "157fd467e3db1248"
        ],
        "x": 14,
        "y": 399,
        "w": 952,
        "h": 362
    },
    {
        "id": "42c4050def517ecb",
        "type": "group",
        "z": "e87d33c62fc606c8",
        "name": "Setpoint generation",
        "style": {
            "label": true,
            "color": "#0070c0",
            "stroke": "#0070c0",
            "fill": "#7fb7df",
            "fill-opacity": "0.32"
        },
        "nodes": [
            "e62ca43880eabaa0",
            "b4529c39009f4eb5",
            "526f554d6149b968",
            "e0d55baa09ca0693",
            "c2a96bb464145167",
            "85ba078991fbf6f3",
            "6ccbd5672da27bd3",
            "3faba50ff9e35a5c",
            "2bd03a3ff56b5fa9"
        ],
        "x": 734,
        "y": 79,
        "w": 992,
        "h": 302
    },
    {
        "id": "ded0df8381430a9c",
        "type": "group",
        "z": "e87d33c62fc606c8",
        "name": "Input Pid params",
        "style": {
            "stroke": "#ffff00",
            "label": true,
            "color": "#000000",
            "fill": "#ffffbf"
        },
        "nodes": [
            "39bb74f5a3aee95d",
            "f6402395b4bac4ec",
            "dc302697ae327bef",
            "9732a4893a357d43",
            "68a76c40bff8c2a7",
            "ae6699b0a058bb3e",
            "42af03e22a571061",
            "27de17b79b18d520",
            "316fa82cfc1b3509",
            "010b398f6eff0b4d"
        ],
        "x": 974,
        "y": 499,
        "w": 492,
        "h": 242
    },
    {
        "id": "50968534f0a9ba63",
        "type": "group",
        "z": "a5830067b341cbd9",
        "name": "Reading tank pressure T02",
        "style": {
            "stroke": "#92d04f",
            "fill": "#e3f3d3",
            "label": true,
            "color": "#92d04f"
        },
        "nodes": [
            "78a02a58ac20c9cd",
            "2f254d3470ec9dcb",
            "154e50eb617f3a0b",
            "4687290467485520",
            "0417285e150ebc0b"
        ],
        "x": 14,
        "y": 19,
        "w": 812,
        "h": 122
    },
    {
        "id": "65d407d31edcf364",
        "type": "group",
        "z": "a5830067b341cbd9",
        "name": "Reading Line pressure",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#0070c0"
        },
        "nodes": [
            "b046ea7bab23c268",
            "02086620e32bca44",
            "80d655f0073b3ead",
            "71c5bd41263cff86",
            "3897d69373ddb7c0"
        ],
        "x": 14,
        "y": 159,
        "w": 832,
        "h": 122
    },
    {
        "id": "ab94042d04b8239d",
        "type": "group",
        "z": "a5830067b341cbd9",
        "name": "Reading tank T01 level",
        "style": {
            "stroke": "#ffff00",
            "fill": "#ffffbf",
            "label": true,
            "color": "#ffC000"
        },
        "nodes": [
            "cb2ed9357745822c",
            "75e44d1c6ee79ea9",
            "042887ab765bd180",
            "06a2c55241307a89",
            "0265fd3acdfc8851"
        ],
        "x": 14,
        "y": 299,
        "w": 832,
        "h": 122
    },
    {
        "id": "b9ed09c5dc5a58d2",
        "type": "group",
        "z": "a5830067b341cbd9",
        "name": "Reading flow rate",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ffbfbf",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "228138d9fa942062",
            "050e8b2c52816709",
            "29a2d7e0e1723511",
            "53c3572faf201f0c",
            "41770fd798589f13"
        ],
        "x": 14,
        "y": 439,
        "w": 832,
        "h": 122
    },
    {
        "id": "de723d7ccb525411",
        "type": "group",
        "z": "3fc007a97f3fcca5",
        "name": "Moleculer Framework Simple Example",
        "style": {
            "fill": "#777777",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "6b11f1b1853e2e50",
            "4faf1c149c06ecec",
            "be0bca10a2032aab"
        ],
        "x": 288,
        "y": 53,
        "w": 764,
        "h": 694
    },
    {
        "id": "68bef7fb58b76ec9",
        "type": "group",
        "z": "3ce97bdb992ee0d1",
        "name": "Registro e Descoberta dos ativos",
        "style": {
            "fill": "#92d04f",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "19f8ad37f8ff2b49",
            "3ff49a028ede6118"
        ],
        "x": 194,
        "y": 59,
        "w": 978,
        "h": 468
    },
    {
        "id": "6f56f9087cf1a1b5",
        "type": "group",
        "z": "8eea00dd0fa2793b",
        "name": "loop control TQ01",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "fb5c943a23e8354e",
            "f0a86febe68d9bc3",
            "d154db2cbc340fde",
            "ba7a51fc4d917b06",
            "54d04bd92aeac6c8",
            "3f32d1c58d9c9378",
            "5024b14450204201",
            "a631b5ba7ad5a942",
            "9aff67c8013abfbd",
            "f895b68b9e2b89a5",
            "8d8cd546e73af20a",
            "ba24770f75a3afe5",
            "6bddc488dd19a449",
            "c9c13b4522f689e9",
            "c8b94782db37271a",
            "69c03b949b04ba43",
            "c94fb7e3b0ec6e81",
            "67be43b013f3ef97",
            "5bdc100f60799609",
            "7ecf73fb1a297fa2",
            "7ae50a58405ea1de",
            "12721d74f64545cd",
            "d966640ab6f306c5",
            "127a8a106b628b89",
            "139c6d4a6cf91524",
            "96e14a638f457dc3",
            "12e5d5e70f500e1c"
        ],
        "x": -26,
        "y": 19,
        "w": 912,
        "h": 547.0000400543213
    },
    {
        "id": "aa24a92a6758c6c8",
        "type": "group",
        "z": "8eea00dd0fa2793b",
        "name": "Input Pid params",
        "style": {
            "stroke": "#ffff00",
            "label": true,
            "color": "#000000",
            "fill": "#ffffbf"
        },
        "nodes": [
            "9af471ff89013c16",
            "94483afb98e37c30",
            "675d4cbafafbdfee",
            "2297e8ccac2fb805",
            "e4a25d21496e6892",
            "902bd9bc82e80c13",
            "8ec628c0e7a707f7",
            "888f9b8468e520ec",
            "2c8c48ef5c1b3659",
            "8abad0d17b7213d7"
        ],
        "x": 934,
        "y": 359,
        "w": 492,
        "h": 242
    },
    {
        "id": "9f76b990d804ca9b",
        "type": "group",
        "z": "8eea00dd0fa2793b",
        "name": "Setpoint generation",
        "style": {
            "label": true,
            "color": "#0070c0",
            "stroke": "#0070c0",
            "fill": "#7fb7df",
            "fill-opacity": "0.32"
        },
        "nodes": [
            "17d46ea8a53f3008",
            "efcb59192edf7523",
            "4e5d78eecb8ebc9d",
            "f60bbda1732c1c55",
            "feaa78b792d51b52",
            "51035a85e0f72f29",
            "92f9819e474698c1",
            "24783e411c88216f",
            "0d7ff3a69093087d"
        ],
        "x": 894,
        "y": 19,
        "w": 992,
        "h": 302
    },
    {
        "id": "34ce1b46adb0680a",
        "type": "group",
        "z": "8eea00dd0fa2793b",
        "name": "Reading PID4 params",
        "style": {
            "stroke": "#001f60",
            "fill": "#bfc7d7",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "c68b94e525a9d098",
            "e859839789f9975b",
            "8aec4fc837c3b5bd",
            "677ef9ee7c213668",
            "4dd4ca19d01b55c6",
            "f1c17e03b333dcc0",
            "afb72ddee9ba6a43",
            "ad978dbb9812f74e",
            "879a0a66ec499f87",
            "3628cf7bbaff09e5",
            "9d736c89ce03fbd1"
        ],
        "x": 14,
        "y": 599,
        "w": 852,
        "h": 322
    },
    {
        "id": "ea0a439a14de4e21",
        "type": "group",
        "z": "8eea00dd0fa2793b",
        "name": "Enable",
        "style": {
            "stroke": "#6f2fa0",
            "label": true,
            "color": "#6f2fa0",
            "fill": "#dbcbe7"
        },
        "nodes": [
            "a320fd7386c19133",
            "2a62f516ddf26e20",
            "5a405f64f9b6c700",
            "97c350c6ab2ed54c",
            "98de96735694b4a4",
            "bbc4eeb68eee6e72",
            "805f396c41ecd1dc",
            "36cefa60a487ba4c",
            "587ebdfbc6b89f79",
            "6536a6c55a7b3b68",
            "b2da2d6e1d162aa1"
        ],
        "x": 894,
        "y": 619,
        "w": 712,
        "h": 202
    },
    {
        "id": "55a90ea75bdf1ffc",
        "type": "group",
        "z": "a2e6abde87c3c115",
        "g": "2a516f0293649552",
        "name": "pit118_daq",
        "style": {
            "fill": "#d1d1d1",
            "label": true
        },
        "nodes": [
            "a85be4ace50c1d9d",
            "2e7966329a68427b",
            "639d4f31bf46f230",
            "528c93715cc4eef4",
            "b5c19b7c14bdd96d",
            "07519ef8085fd292",
            "728049732b9bef53",
            "2b7deffd3e6322fc",
            "e8c5462a186dea82",
            "ed3badedccae9aa7",
            "a46b2ef1c48787a7",
            "d79cbfe0694d95b7",
            "525feabc4e37a236",
            "53df1da2d55589e5",
            "ecc9f54da9e9a018",
            "091426c448b72d26",
            "6712417c55bacf4a",
            "31cedfcb32edfca2",
            "fce9946343fae525"
        ],
        "x": 974,
        "y": 639,
        "w": 712,
        "h": 282
    },
    {
        "id": "b0df24934cee3bbc",
        "type": "group",
        "z": "a2e6abde87c3c115",
        "g": "2a516f0293649552",
        "name": "lit125_daq",
        "style": {
            "fill": "#d1d1d1",
            "label": true
        },
        "nodes": [
            "da7880849acd0471",
            "5f81903601aa5980",
            "080dadf2445f7e6c",
            "18d698e9d8e40ed3",
            "09a3ec427cfa4618",
            "e97a9e0f8202e6c7",
            "3b7c1f69f9dc3e7a",
            "3ca87e81034b0805",
            "3456f2268877143a",
            "f8307a4dfb9d8a74",
            "8cafb37d21f6209c",
            "f2e7dfe51b9c489d",
            "dbc44a553a47a58a"
        ],
        "x": 974,
        "y": 379,
        "w": 712,
        "h": 242
    },
    {
        "id": "86b433e968f1e72f",
        "type": "group",
        "z": "a2e6abde87c3c115",
        "g": "2a516f0293649552",
        "name": "fit116_daq",
        "style": {
            "fill": "#d1d1d1",
            "label": true
        },
        "nodes": [
            "e2a72607e6c2042e",
            "a3ab5cebb324e655",
            "1a3fe053bc2fe382",
            "73cd83b2f3e9b989",
            "e8a691b079d2fdad",
            "fb6a92e76c9ff3b1",
            "e64de53c4cacbad2",
            "5c950cef333c7fd7",
            "c7a8c314cdee76b3",
            "41a8c877fb897181",
            "e262cbc7852730e8",
            "f7fd3ef0ba124f09",
            "7838e6dda5583da9"
        ],
        "x": 974,
        "y": 119,
        "w": 712,
        "h": 242
    },
    {
        "id": "ad803a65c77249c9",
        "type": "group",
        "z": "a2e6abde87c3c115",
        "g": "2a516f0293649552",
        "name": "pit129_daq",
        "style": {
            "fill": "#d1d1d1",
            "label": true
        },
        "nodes": [
            "daefee22c7a80c7a",
            "d10ec790bf829e82",
            "da3f922c8d7caa5c",
            "4d13efe74499fc46",
            "6949f6809cf78551",
            "56a6f27627dd650b",
            "f5f572321faab077",
            "ef32aacbdd1df6af",
            "954e1166481fef95",
            "08ded1b5d6812c79",
            "7a6605bc6192b2b1",
            "89865e5f21dcbe4e",
            "d95c4b5b8e45bf61"
        ],
        "x": 974,
        "y": 939,
        "w": 712,
        "h": 242
    },
    {
        "id": "f10df41018357765",
        "type": "group",
        "z": "a2e6abde87c3c115",
        "g": "5f28ab2e8045f710",
        "name": "pic116_pid4",
        "style": {
            "fill": "#d1d1d1",
            "label": true
        },
        "nodes": [
            "cb8e6365d913ed3d",
            "ebc6cfe4c4adcf17",
            "e4606791e69ab946",
            "13ceed822e5328d3",
            "c50968f8282511d3",
            "1c0e93f01598e0c8",
            "bc9990322b6814ea",
            "1f6148278ffbe8c7"
        ],
        "x": 1814,
        "y": 119,
        "w": 772,
        "h": 142
    },
    {
        "id": "275351d1deafbdbd",
        "type": "group",
        "z": "a2e6abde87c3c115",
        "g": "5f28ab2e8045f710",
        "name": "pic129_pid4",
        "style": {
            "fill": "#d1d1d1",
            "label": true
        },
        "nodes": [
            "d97290ffdd64cc2f",
            "6239251d36209274",
            "248686688e28c1ce",
            "9fc17d7e0d0cdb0c",
            "b161f4fc06716e6f",
            "1ad932c1244e46ef",
            "6a12a59ba9a6b012",
            "27701ff1b5d02afe"
        ],
        "x": 1814,
        "y": 1079,
        "w": 772,
        "h": 142
    },
    {
        "id": "b3dc3e98c6700bcd",
        "type": "group",
        "z": "a2e6abde87c3c115",
        "g": "5f28ab2e8045f710",
        "name": "lic125_pid4",
        "style": {
            "fill": "#d1d1d1",
            "label": true
        },
        "nodes": [
            "85b1fdfa73a69ccd",
            "4b6019393b83e3b7",
            "11b3a2a3ace338c8",
            "7cc557f7aabbbe0d",
            "7c344a644483758b",
            "f6ef0f4807b5defd",
            "92d910c0e51b8330",
            "adfee6e17b717828"
        ],
        "x": 1814,
        "y": 279,
        "w": 772,
        "h": 142
    },
    {
        "id": "201e1c1595fbf5df",
        "type": "group",
        "z": "a2e6abde87c3c115",
        "g": "470c6c293f51294b",
        "name": "p2_daq",
        "style": {
            "fill": "#d1d1d1",
            "label": true
        },
        "nodes": [
            "c94e5daf5b286752",
            "32a021e7d248f409",
            "1e276f522f2d0b73",
            "d788d84286500fda",
            "30b79bed0d6feb0b",
            "0f357f8a7f6d6f82",
            "4f1677c18d8eaa6b",
            "027b6e31af15dd9c",
            "368b2be8d150158c",
            "93fb0e00bce1217e",
            "328656bd08718605",
            "c4fe1598b1b3248f",
            "38f7ae047c306b98",
            "a51c03826cd1b1c8",
            "272f4f2463a218cf",
            "8e9fc8340f44fe67",
            "e52f55999be4eaf1",
            "1e7e9c58e5b5b99b"
        ],
        "x": 2914,
        "y": 859,
        "w": 732,
        "h": 342
    },
    {
        "id": "8de17ba9b6160bbc",
        "type": "group",
        "z": "a2e6abde87c3c115",
        "g": "470c6c293f51294b",
        "name": "p1_daq",
        "style": {
            "fill": "#d1d1d1",
            "label": true
        },
        "nodes": [
            "f25d374291d4e1ae",
            "08fbe8547b64188e",
            "1d4da7df7e42ef8e",
            "bf8aad30eba0f30b",
            "7c5a989562c9c7fa",
            "b914cca4f2c0e7bf",
            "0627785ff5313df7",
            "6b3108c55aec48d6",
            "529f2b0ea628a705",
            "915b6a9a058f5c09",
            "86563392ab6965be",
            "9b41a2859e2fb633",
            "6bdf7e69d72f8b5a",
            "07dd0c4d3264bf08",
            "67dd62c880646e61"
        ],
        "x": 2914,
        "y": 519,
        "w": 732,
        "h": 262
    },
    {
        "id": "a69d88a61a140b67",
        "type": "group",
        "z": "a2e6abde87c3c115",
        "g": "470c6c293f51294b",
        "name": "lv122_daq",
        "style": {
            "fill": "#d1d1d1",
            "label": true
        },
        "nodes": [
            "a30f32ac771d02e0",
            "a2f1ddf9f4f051e3",
            "8ec9e5627b5571dc",
            "543145fc7553ef80",
            "5c90409c70541eb0",
            "8a4ae8f825daabdb",
            "d7724de83d014e05",
            "10a68136f884c78a",
            "f14925a2400f43da",
            "0ae7e3ee8ca65a28",
            "e1834628a3f0ac14",
            "105455fd917768a4",
            "03163a3f755f4cce",
            "2d15c13b6ccc8abd",
            "89e59a71786eefd5",
            "051c35ad45112f95"
        ],
        "x": 2914,
        "y": 159,
        "w": 732,
        "h": 302
    },
    {
        "id": "b355f8f0cdc6368e",
        "type": "group",
        "z": "a2e6abde87c3c115",
        "g": "5f28ab2e8045f710",
        "name": "pic118_pid4",
        "style": {
            "fill": "#d1d1d1",
            "label": true
        },
        "nodes": [
            "f6f5992762f2eaef",
            "45d628aaf8e37523",
            "8d737a82ea9f855a",
            "7bfa9810c6413a3c",
            "25116125c0dcb91f",
            "26d0c02cbd38a9cd",
            "18410950d325c9d2",
            "9ca82ed1cb7c0b73",
            "b182de8d1d25579b",
            "e7ffd1fbda974163",
            "ab1ef2c9d98d387f",
            "e05866e558428b8d",
            "7b4353329ac8d36e",
            "2d8811a128a5e961",
            "9a217f97216cc0d8",
            "d30f39233629d3c1",
            "64b2a70d019420e9",
            "f5e21fe5f5c0a6b5",
            "68b8c57b912240b9",
            "9315b76255f8e1f1",
            "059858865bb847c8",
            "aa8afa287a7f9282",
            "c4e2d8ca292c8345",
            "2ff14605ea739896",
            "f1e69d5e3913b2c6",
            "a90dd4968ee56cf8",
            "inject1",
            "http1",
            "debug1",
            "2e322767a0bb703e"
        ],
        "x": 1814,
        "y": 499,
        "w": 852,
        "h": 502
    },
    {
        "id": "6b11f1b1853e2e50",
        "type": "group",
        "z": "3fc007a97f3fcca5",
        "g": "de723d7ccb525411",
        "name": "Actions",
        "style": {
            "fill": "#d1d1d1",
            "label": true
        },
        "nodes": [
            "47540566cb5c3c11",
            "7f12e643ee9d1a7f",
            "8a2a8be6994dadef",
            "99f47b8a43ef7bb3",
            "484cdfe1b4c20b15",
            "6665d0fb4870e7bf",
            "fab5901c699f22fc",
            "04ad6fa779221d04",
            "ed3253ebdeeaa87b",
            "c67d9c6f9a6c507f",
            "5f04824559ad1f86"
        ],
        "x": 314,
        "y": 79,
        "w": 712,
        "h": 282
    },
    {
        "id": "4faf1c149c06ecec",
        "type": "group",
        "z": "3fc007a97f3fcca5",
        "g": "de723d7ccb525411",
        "name": "Events",
        "style": {
            "fill": "#d1d1d1",
            "label": true
        },
        "nodes": [
            "d4c502ae254526bd",
            "e25ea02a601577a9",
            "9c34c19b0486caf0",
            "d70c45e646e78d5d"
        ],
        "x": 314,
        "y": 379,
        "w": 712,
        "h": 122
    },
    {
        "id": "be0bca10a2032aab",
        "type": "group",
        "z": "3fc007a97f3fcca5",
        "g": "de723d7ccb525411",
        "name": "Calling Action (Services inside Node-RED)",
        "style": {
            "fill": "#d1d1d1",
            "label": true
        },
        "nodes": [
            "851fc21af8ec6155",
            "c2db5d2bd7d0babc",
            "30bc2d47b63b9bb8",
            "04990d379a0718d2",
            "3234db09f574863a",
            "0e20bd94f879cf82",
            "fcdef2416bd9839a",
            "beaa76e71c7c78fe",
            "167db923cc2c8f0c",
            "5734ee36fa12ff2b"
        ],
        "x": 314,
        "y": 519,
        "w": 712,
        "h": 202
    },
    {
        "id": "19f8ad37f8ff2b49",
        "type": "group",
        "z": "3ce97bdb992ee0d1",
        "g": "68bef7fb58b76ec9",
        "name": "",
        "style": {
            "fill": "#d1d1d1",
            "label": true
        },
        "nodes": [
            "cae14ef9ac65a8da",
            "f660df79d1995067",
            "500b6bd83ed3f377",
            "17a9e01b532f7589",
            "9f2e2eeae77b5396",
            "7caa6331dbda4214",
            "a8d50316a01f1de6",
            "d6f94f07e3f02260",
            "ebb9a0ae70473ace",
            "867d8fe6be26bd87",
            "7cb366c82358ca3b",
            "234c1ed64ef9f8ac",
            "e0bf57e1f7707782",
            "85a271d6eaf821a5",
            "d7df2f191c0b0f8c",
            "1910ce3303ada697",
            "bd5fb22cb52eb398",
            "f27292c429afa813",
            "a8b5360fe703eb72",
            "08b970c9bde71121",
            "e811bcd50da24aba"
        ],
        "x": 234,
        "y": 119,
        "w": 912,
        "h": 382
    },
    {
        "id": "15fdc347.1238cd",
        "type": "moleculer-config",
        "name": "NATS",
        "options": "{\"nodeID\":\"clientID\", \"transporter\":\"nats://192.168.1.201:4222\"}"
    },
    {
        "id": "ede1a536b4fdbcff",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://192.168.1.114:26118",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "acd2f698.88bd28",
        "type": "OpcUa-Endpoint",
        "z": "a2e6abde87c3c115",
        "endpoint": "opc.tcp://localhost:53530/OPCUA/SimulationServer",
        "login": false
    },
    {
        "id": "5a1ac14b.4d0f38",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://TREL16087112.vstage.co:53530/OPCUA/SimulationServer",
        "secpol": "None",
        "secmode": "None",
        "login": false
    },
    {
        "id": "83439742.083188",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://0.0.0.0:4840/",
        "secpol": "None",
        "secmode": "None",
        "login": false
    },
    {
        "id": "8c2ad77a986bc998",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://192.168.1.111:26118/UA/MyLittleServer",
        "secpol": "None",
        "secmode": "None",
        "none": false,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "69ae20a702e2e3d7",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://192.168.1.101:24129/UA/MyLittleServer",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "a8686de49781f383",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://192.168.1.114:26002/UA/MyLittleServer",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "f0f78b51406b5649",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://192.168.1.111:26125/UA/MyLittleServer",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "b95983c7eb59384c",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://192.168.1.111:26116/UA/MyLittleServer",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "9883401a98aa8537",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://192.168.1.111:26129/UA/MyLittleServer",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "c9722999d7a6ef78",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://192.168.1.114:26001/UA/MyLittleServer",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "1ec1c3d4b52fa3ed",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://192.168.1.114:26122/UA/MyLittleServer",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "bdc48601.ebf958",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://localhost:53881/UA/SimpleNodeRedServer",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "7290d8b0.f713d8",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://localhost:62544/Quickstarts/AlarmConditionServer",
        "login": false
    },
    {
        "id": "3bfe3760a65a6fe2",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://192.168.1.101:24116/UA/MyLittleServer",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "55ef72f70b1594bd",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://192.168.1.101:24125/UA/MyLittleServer",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "a2f2fee6b8c0270f",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://192.168.1.101:24118/UA/MyLittleServer",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "f23add3fd8d371dd",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://192.168.1.101:24118/UA/pic118_pid4",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "0dd7e1bf0b208734",
        "type": "ui_group",
        "name": "Input data",
        "tab": "04670f1762726691",
        "order": 1,
        "disp": false,
        "width": 11,
        "collapse": false,
        "className": ""
    },
    {
        "id": "63ebd62b2640f3f7",
        "type": "moleculer-config",
        "name": "NATS_ext",
        "options": "{\"transporter\":\"nats://192.168.1.201:4222\"}"
    },
    {
        "id": "718989759ca7cebb",
        "type": "ui_group",
        "name": "Graphics",
        "tab": "04670f1762726691",
        "order": 2,
        "disp": false,
        "width": 20,
        "collapse": false,
        "className": ""
    },
    {
        "id": "04670f1762726691",
        "type": "ui_tab",
        "name": "Line pressure",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7b393050acc74505",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "ea94b4c56973474d",
        "type": "ui_group",
        "name": " Tank pressure T02",
        "tab": "28904fa54691ed60",
        "order": 1,
        "disp": true,
        "width": 7,
        "collapse": false,
        "className": ""
    },
    {
        "id": "644b753dce512329",
        "type": "ui_group",
        "name": "Tank level T01",
        "tab": "28904fa54691ed60",
        "order": 4,
        "disp": true,
        "width": 7,
        "collapse": false,
        "className": ""
    },
    {
        "id": "c419237249c0888f",
        "type": "ui_group",
        "name": "Flow rate",
        "tab": "28904fa54691ed60",
        "order": 3,
        "disp": true,
        "width": 7,
        "collapse": false,
        "className": ""
    },
    {
        "id": "1c0d3737d26bed9d",
        "type": "ui_group",
        "name": "Line pressure",
        "tab": "28904fa54691ed60",
        "order": 2,
        "disp": true,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "28904fa54691ed60",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ddf4de6a869f7741",
        "type": "ui_group",
        "name": "actions",
        "tab": "28904fa54691ed60",
        "order": 5,
        "disp": true,
        "width": 10,
        "collapse": false,
        "className": ""
    },
    {
        "id": "ce47d8980738f079",
        "type": "ui_group",
        "name": "List services",
        "tab": "d711948e443e56cd",
        "order": 6,
        "disp": true,
        "width": 20,
        "collapse": false,
        "className": ""
    },
    {
        "id": "f36570e8cebef9b3",
        "type": "moleculer-service-config",
        "name": "math",
        "version": "",
        "settings": "{}"
    },
    {
        "id": "07ce3e66312bce5d",
        "type": "ui_group",
        "name": "Node Display",
        "tab": "463d2f876c0c8884",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "463d2f876c0c8884",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2bdcba10a3cc643c",
        "type": "ui_group",
        "name": "Node Display",
        "tab": "e795016acdbb535f",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false
    },
    {
        "id": "e795016acdbb535f",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "001e693c1a47e356",
        "type": "ui_spacer",
        "z": "a5830067b341cbd9",
        "name": "spacer",
        "group": "1238e4f5a8834831",
        "order": 1,
        "width": 7,
        "height": 1
    },
    {
        "id": "15f331c77a4b5709",
        "type": "ui_group",
        "name": "List actions",
        "tab": "9d2445ea62a0ec38",
        "order": 7,
        "disp": true,
        "width": 20,
        "collapse": false,
        "className": ""
    },
    {
        "id": "d711948e443e56cd",
        "type": "ui_tab",
        "name": "List services",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "719267d0be3cccc5",
        "type": "ui_spacer",
        "z": "3ce97bdb992ee0d1",
        "name": "spacer",
        "group": "ea94b4c56973474d",
        "order": 2,
        "width": 4,
        "height": 1
    },
    {
        "id": "f16385fa357c83a1",
        "type": "ui_spacer",
        "z": "3ce97bdb992ee0d1",
        "name": "spacer",
        "group": "ea94b4c56973474d",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "9d9ea189977550a4",
        "type": "ui_spacer",
        "z": "3ce97bdb992ee0d1",
        "name": "spacer",
        "group": "ea94b4c56973474d",
        "order": 4,
        "width": 4,
        "height": 1
    },
    {
        "id": "b127b88b2283a976",
        "type": "ui_spacer",
        "z": "3ce97bdb992ee0d1",
        "name": "spacer",
        "group": "1c0d3737d26bed9d",
        "order": 2,
        "width": 4,
        "height": 1
    },
    {
        "id": "9b8f714df3327781",
        "type": "ui_spacer",
        "z": "3ce97bdb992ee0d1",
        "name": "spacer",
        "group": "1c0d3737d26bed9d",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "e41af881c7190497",
        "type": "ui_spacer",
        "z": "3ce97bdb992ee0d1",
        "name": "spacer",
        "group": "1c0d3737d26bed9d",
        "order": 4,
        "width": 4,
        "height": 1
    },
    {
        "id": "f805733093dce203",
        "type": "ui_spacer",
        "z": "3ce97bdb992ee0d1",
        "name": "spacer",
        "group": "c419237249c0888f",
        "order": 2,
        "width": 4,
        "height": 1
    },
    {
        "id": "aa671e1ee4189a42",
        "type": "ui_spacer",
        "z": "3ce97bdb992ee0d1",
        "name": "spacer",
        "group": "c419237249c0888f",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "a3f60dfcf12b01f3",
        "type": "ui_spacer",
        "z": "3ce97bdb992ee0d1",
        "name": "spacer",
        "group": "c419237249c0888f",
        "order": 4,
        "width": 4,
        "height": 1
    },
    {
        "id": "d025c455aacd5eb2",
        "type": "ui_spacer",
        "z": "3ce97bdb992ee0d1",
        "name": "spacer",
        "group": "644b753dce512329",
        "order": 2,
        "width": 4,
        "height": 1
    },
    {
        "id": "bf78e900d9106b74",
        "type": "ui_spacer",
        "z": "3ce97bdb992ee0d1",
        "name": "spacer",
        "group": "644b753dce512329",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "9cf3f14842ac0777",
        "type": "ui_spacer",
        "z": "3ce97bdb992ee0d1",
        "name": "spacer",
        "group": "644b753dce512329",
        "order": 4,
        "width": 4,
        "height": 1
    },
    {
        "id": "9d2445ea62a0ec38",
        "type": "ui_tab",
        "name": "List actions",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "47987123ef818ed4",
        "type": "ui_tab",
        "name": "List nodes",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "36a8ea7d81551bea",
        "type": "ui_group",
        "name": "List nodes",
        "tab": "47987123ef818ed4",
        "order": 1,
        "disp": true,
        "width": 20,
        "collapse": false,
        "className": ""
    },
    {
        "id": "c440c14f14c7f459",
        "type": "ui_tab",
        "name": "List events",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "385a92c78470521d",
        "type": "ui_group",
        "name": "List events",
        "tab": "c440c14f14c7f459",
        "order": 1,
        "disp": true,
        "width": 20,
        "collapse": false,
        "className": ""
    },
    {
        "id": "d31d6265757c2348",
        "type": "ui_tab",
        "name": "TQ01 loop control test",
        "icon": "dashboard",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "98c8642c17167e6f",
        "type": "ui_group",
        "name": "Sensor_Lit125",
        "tab": "d31d6265757c2348",
        "order": 1,
        "disp": false,
        "width": 9,
        "collapse": false,
        "className": ""
    },
    {
        "id": "e2420902282f4f2e",
        "type": "ui_group",
        "name": "Controlo data",
        "tab": "d31d6265757c2348",
        "order": 2,
        "disp": false,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "78a02a58ac20c9cd",
        "type": "inject",
        "z": "a5830067b341cbd9",
        "g": "50968534f0a9ba63",
        "name": "injetar",
        "props": [
            {
                "p": "enable",
                "v": "1",
                "vt": "num"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "x": 120,
        "y": 80,
        "wires": [
            [
                "0417285e150ebc0b"
            ]
        ]
    },
    {
        "id": "d1f24f07c235f8b1",
        "type": "comment",
        "z": "a5830067b341cbd9",
        "name": "GetInputCurrent",
        "info": "Reading GetInputCurrent \nIt reads the four current input channels from 4mA to 20mA.\n\nVia Api:**http://192.168.1.201:3005/api/megaind-rpi.getOutputCurrent?**\n\nVia Transporter call daq.riin\nTransporter Nats: **{\"transporter\":\"nats://192.168.1.201:4222\"}**\n\nArray position:\n0 = sensor PIT129 tank pressure T02\n1 = sensor PIT118 line pressure\n2 = sensor LIT125 tank level T01\n3 = sensor FIT116 flow rate",
        "x": 940,
        "y": 40,
        "wires": []
    },
    {
        "id": "b046ea7bab23c268",
        "type": "debug",
        "z": "a5830067b341cbd9",
        "g": "65d407d31edcf364",
        "name": "PIT118",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 200,
        "wires": []
    },
    {
        "id": "cb2ed9357745822c",
        "type": "debug",
        "z": "a5830067b341cbd9",
        "g": "ab94042d04b8239d",
        "name": "LIT 125",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 340,
        "wires": []
    },
    {
        "id": "228138d9fa942062",
        "type": "debug",
        "z": "a5830067b341cbd9",
        "g": "b9ed09c5dc5a58d2",
        "name": "FIT116",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 480,
        "wires": []
    },
    {
        "id": "2f254d3470ec9dcb",
        "type": "ui_gauge",
        "z": "a5830067b341cbd9",
        "g": "50968534f0a9ba63",
        "name": "",
        "group": "ea94b4c56973474d",
        "order": 1,
        "width": "7",
        "height": "7",
        "gtype": "compass",
        "title": "PIT129 ",
        "label": "%",
        "format": "{{payload}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 740,
        "y": 100,
        "wires": []
    },
    {
        "id": "75e44d1c6ee79ea9",
        "type": "ui_gauge",
        "z": "a5830067b341cbd9",
        "g": "ab94042d04b8239d",
        "name": "",
        "group": "644b753dce512329",
        "order": 1,
        "width": "7",
        "height": "7",
        "gtype": "compass",
        "title": "LIT 125",
        "label": "%",
        "format": "{{payload}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 740,
        "y": 380,
        "wires": []
    },
    {
        "id": "050e8b2c52816709",
        "type": "ui_gauge",
        "z": "a5830067b341cbd9",
        "g": "b9ed09c5dc5a58d2",
        "name": "",
        "group": "c419237249c0888f",
        "order": 1,
        "width": "7",
        "height": "7",
        "gtype": "compass",
        "title": "FIT116",
        "label": "%",
        "format": "{{payload}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 750,
        "y": 520,
        "wires": []
    },
    {
        "id": "02086620e32bca44",
        "type": "inject",
        "z": "a5830067b341cbd9",
        "g": "65d407d31edcf364",
        "name": "injetar",
        "props": [
            {
                "p": "enable",
                "v": "1",
                "vt": "num"
            }
        ],
        "repeat": "0.25",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "x": 120,
        "y": 220,
        "wires": [
            [
                "71c5bd41263cff86"
            ]
        ]
    },
    {
        "id": "042887ab765bd180",
        "type": "inject",
        "z": "a5830067b341cbd9",
        "g": "ab94042d04b8239d",
        "name": "injetar",
        "props": [
            {
                "p": "enable",
                "v": "1",
                "vt": "num"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "x": 120,
        "y": 360,
        "wires": [
            [
                "0265fd3acdfc8851"
            ]
        ]
    },
    {
        "id": "29a2d7e0e1723511",
        "type": "inject",
        "z": "a5830067b341cbd9",
        "g": "b9ed09c5dc5a58d2",
        "name": "injetar",
        "props": [
            {
                "p": "enable",
                "v": "1",
                "vt": "num"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "x": 120,
        "y": 500,
        "wires": [
            [
                "41770fd798589f13"
            ]
        ]
    },
    {
        "id": "154e50eb617f3a0b",
        "type": "function",
        "z": "a5830067b341cbd9",
        "g": "50968534f0a9ba63",
        "name": "Global PIT129",
        "func": "global.set(\"PIT129\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 80,
        "wires": [
            [
                "4687290467485520",
                "2f254d3470ec9dcb"
            ]
        ]
    },
    {
        "id": "80d655f0073b3ead",
        "type": "function",
        "z": "a5830067b341cbd9",
        "g": "65d407d31edcf364",
        "name": "Global PIT118",
        "func": "global.set(\"PIT118\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 220,
        "wires": [
            [
                "b046ea7bab23c268",
                "3897d69373ddb7c0"
            ]
        ]
    },
    {
        "id": "06a2c55241307a89",
        "type": "function",
        "z": "a5830067b341cbd9",
        "g": "ab94042d04b8239d",
        "name": "Global LIT125",
        "func": "global.set(\"LIT125\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 360,
        "wires": [
            [
                "cb2ed9357745822c",
                "75e44d1c6ee79ea9"
            ]
        ]
    },
    {
        "id": "53c3572faf201f0c",
        "type": "function",
        "z": "a5830067b341cbd9",
        "g": "b9ed09c5dc5a58d2",
        "name": "Global FIT116",
        "func": "global.set(\"FIT116\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 500,
        "wires": [
            [
                "228138d9fa942062",
                "050e8b2c52816709"
            ]
        ]
    },
    {
        "id": "4687290467485520",
        "type": "debug",
        "z": "a5830067b341cbd9",
        "g": "50968534f0a9ba63",
        "name": "debug 27",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 60,
        "wires": []
    },
    {
        "id": "0417285e150ebc0b",
        "type": "moleculer-DAQ_AI_I",
        "z": "a5830067b341cbd9",
        "g": "50968534f0a9ba63",
        "broker": "63ebd62b2640f3f7",
        "name": "PIT129",
        "topic": "",
        "options": "{}",
        "ident": 0,
        "pv": "Channel_1",
        "stack": "0",
        "x": 300,
        "y": 80,
        "wires": [
            [
                "154e50eb617f3a0b"
            ]
        ]
    },
    {
        "id": "71c5bd41263cff86",
        "type": "moleculer-DAQ_AI_I",
        "z": "a5830067b341cbd9",
        "g": "65d407d31edcf364",
        "broker": "63ebd62b2640f3f7",
        "name": "PIT118",
        "topic": "",
        "options": "{}",
        "ident": "1",
        "pv": "Channel_2",
        "stack": "0",
        "x": 300,
        "y": 220,
        "wires": [
            [
                "80d655f0073b3ead"
            ]
        ]
    },
    {
        "id": "0265fd3acdfc8851",
        "type": "moleculer-DAQ_AI_I",
        "z": "a5830067b341cbd9",
        "g": "ab94042d04b8239d",
        "broker": "63ebd62b2640f3f7",
        "name": "LIT125",
        "topic": "",
        "options": "{}",
        "ident": "2",
        "pv": "Channel_3",
        "stack": "0",
        "x": 300,
        "y": 360,
        "wires": [
            [
                "06a2c55241307a89"
            ]
        ]
    },
    {
        "id": "41770fd798589f13",
        "type": "moleculer-DAQ_AI_I",
        "z": "a5830067b341cbd9",
        "g": "b9ed09c5dc5a58d2",
        "broker": "63ebd62b2640f3f7",
        "name": "FIT116",
        "topic": "",
        "options": "{}",
        "ident": "3",
        "pv": "Channel_4",
        "stack": "0",
        "x": 290,
        "y": 500,
        "wires": [
            [
                "53c3572faf201f0c"
            ]
        ]
    },
    {
        "id": "3897d69373ddb7c0",
        "type": "ui_gauge",
        "z": "a5830067b341cbd9",
        "g": "65d407d31edcf364",
        "name": "",
        "group": "1c0d3737d26bed9d",
        "order": 1,
        "width": "7",
        "height": "7",
        "gtype": "compass",
        "title": "PIT118",
        "label": "%",
        "format": "{{payload}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 740,
        "y": 240,
        "wires": []
    },
    {
        "id": "a452b82778014e86",
        "type": "ui_button",
        "z": "e87d33c62fc606c8",
        "g": "e12dad24f2e30dd7",
        "name": "",
        "group": "0dd7e1bf0b208734",
        "order": 15,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "Button_ON",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 80,
        "wires": [
            [
                "efefe14ecf28779d",
                "e27cbfd3b3c0698e",
                "4abcbc41b2ea018b"
            ]
        ]
    },
    {
        "id": "e84c9b1630519ebb",
        "type": "ui_button",
        "z": "e87d33c62fc606c8",
        "g": "e12dad24f2e30dd7",
        "name": "",
        "group": "0dd7e1bf0b208734",
        "order": 16,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "className": "Button_OFF",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "efefe14ecf28779d",
                "e27cbfd3b3c0698e",
                "4abcbc41b2ea018b"
            ]
        ]
    },
    {
        "id": "26637ac156a4f327",
        "type": "ui_switch",
        "z": "e87d33c62fc606c8",
        "g": "e12dad24f2e30dd7",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "0dd7e1bf0b208734",
        "order": 14,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "send",
        "oncolor": "green",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "red",
        "animate": false,
        "className": "switch",
        "x": 510,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "e27cbfd3b3c0698e",
        "type": "function",
        "z": "e87d33c62fc606c8",
        "g": "e12dad24f2e30dd7",
        "name": "Flow Eneable",
        "func": "   if(global.get(\"M2\") == 1 || global.get(\"M1\") == 1){\n      flow.set(\"Eneable\",0) \n      msg.payload = \"desativado por outra malha\"\n      return msg;\n   }\n   else{\n      if  (msg.payload === true) {\n         flow.set(\"Eneable\", 1)\n         global.set(\"M3\", 1)\n         msg.payload = \"acionado\"\n         return msg;\n\n      } else {\n         flow.set(\"Eneable\", 0)\n         global.set(\"M3\", 0)\n         msg.payload = \"desativado\"\n         return msg;\n      }\n   }",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 140,
        "wires": [
            [
                "8c0ae7a7c66042b1"
            ]
        ]
    },
    {
        "id": "0ecb355e2ba80579",
        "type": "moleculer-PID4",
        "z": "e87d33c62fc606c8",
        "g": "4480fb045a7f8d92",
        "broker": "63ebd62b2640f3f7",
        "name": "Line_pressure_CTRL_Loop",
        "topic": "",
        "options": "{}",
        "spdyn": "{}",
        "ident": "2",
        "pv": "",
        "setpoint": "",
        "loopControl": "pic129_pid4.pidplus",
        "x": 260,
        "y": 340,
        "wires": [
            [
                "8a3f461ddf5ee468"
            ],
            [
                "50d54d254aa0b5c3"
            ]
        ]
    },
    {
        "id": "50d54d254aa0b5c3",
        "type": "function",
        "z": "e87d33c62fc606c8",
        "g": "4480fb045a7f8d92",
        "name": "Extract inputs from PID4.0/data",
        "func": "//Extract and individualize input variables from PID4.0/data\nflow.set(\"Ctrl.Loop3.proportionalConstant\", msg.payload.kp);\nflow.set(\"Ctrl.Loop3.integrative\", msg.payload.ti);\nflow.set(\"Ctrl.Loop3.derivative\", msg.payload.td);\nflow.set(\"Ctrl.Loop3.mv\", msg.payload.manipulatedVariable);\nflow.set(\"Ctrl.Loop3.error\", msg.payload.error);\nflow.set(\"setpoint3\", msg.payload.setpoint);\nflow.set(\"Ctrl.Loop3.pv\", msg.payload.pv);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "42b8d27ec63bada8",
        "type": "ui_chart",
        "z": "e87d33c62fc606c8",
        "g": "f73bca4c7b3fa24a",
        "name": "",
        "group": "718989759ca7cebb",
        "order": 1,
        "width": 20,
        "height": 7,
        "label": "SetPoint x Process variable",
        "chartType": "line",
        "legend": "true",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#00ff4c",
            "#00d5ff",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 820,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "a45b2a2a102a24d9",
        "type": "function",
        "z": "e87d33c62fc606c8",
        "g": "f73bca4c7b3fa24a",
        "name": "GET.proportionalConstant",
        "func": "var local_proportionalConstant = flow.get(\"Ctrl.Loop3.proportionalConstant\");\nmsg.payload = local_proportionalConstant;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 520,
        "wires": [
            [
                "1c60aaf00905a1e1"
            ]
        ]
    },
    {
        "id": "d15ef6302fb52c0d",
        "type": "function",
        "z": "e87d33c62fc606c8",
        "g": "f73bca4c7b3fa24a",
        "name": "GET.derivativeTimeInMs",
        "func": "var local_derivativeTimeInMs = flow.get(\"Ctrl.Loop3.derivative\");\nmsg.payload = local_derivativeTimeInMs;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 480,
        "wires": [
            [
                "a37bde095c692967"
            ]
        ]
    },
    {
        "id": "f532c38f90447c20",
        "type": "function",
        "z": "e87d33c62fc606c8",
        "g": "f73bca4c7b3fa24a",
        "name": "GET.resetTimeInMs",
        "func": "var local_resetTimeInMs = flow.get(\"Ctrl.Loop3.integrative\");\nmsg.payload = local_resetTimeInMs;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 560,
        "wires": [
            [
                "1afe93092dc51211"
            ]
        ]
    },
    {
        "id": "a37bde095c692967",
        "type": "ui_text",
        "z": "e87d33c62fc606c8",
        "g": "f73bca4c7b3fa24a",
        "group": "0dd7e1bf0b208734",
        "order": 10,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Td",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": true,
        "font": "Times New Roman,Times,serif",
        "fontSize": "20",
        "color": "#469daf",
        "x": 750,
        "y": 480,
        "wires": []
    },
    {
        "id": "1c60aaf00905a1e1",
        "type": "ui_text",
        "z": "e87d33c62fc606c8",
        "g": "f73bca4c7b3fa24a",
        "group": "0dd7e1bf0b208734",
        "order": 7,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "kp",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "20",
        "color": "#469daf",
        "x": 750,
        "y": 520,
        "wires": []
    },
    {
        "id": "1afe93092dc51211",
        "type": "ui_text",
        "z": "e87d33c62fc606c8",
        "g": "f73bca4c7b3fa24a",
        "group": "0dd7e1bf0b208734",
        "order": 13,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Ti",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "20",
        "color": "#469daf",
        "x": 750,
        "y": 560,
        "wires": []
    },
    {
        "id": "f1842a02f07c4d5a",
        "type": "inject",
        "z": "e87d33c62fc606c8",
        "g": "f73bca4c7b3fa24a",
        "name": "One second cyclical request",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 560,
        "wires": [
            [
                "d15ef6302fb52c0d",
                "a45b2a2a102a24d9",
                "f532c38f90447c20",
                "1e2cff52dbaaa463",
                "476c193aa2e5e17f",
                "df40d05c0b650acd",
                "d3f793525ba89886",
                "157fd467e3db1248"
            ]
        ]
    },
    {
        "id": "1e2cff52dbaaa463",
        "type": "function",
        "z": "e87d33c62fc606c8",
        "g": "f73bca4c7b3fa24a",
        "name": "GET.PIT118",
        "func": "var local_PIT129 = global.get(\"PIT118\");\nmsg.payload = local_PIT129;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 440,
        "wires": [
            [
                "c5d7b4c6b586a7bb"
            ]
        ]
    },
    {
        "id": "c5d7b4c6b586a7bb",
        "type": "ui_gauge",
        "z": "e87d33c62fc606c8",
        "g": "f73bca4c7b3fa24a",
        "name": "",
        "group": "0dd7e1bf0b208734",
        "order": 1,
        "width": 11,
        "height": 6,
        "gtype": "compass",
        "title": "Line pressure",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 780,
        "y": 440,
        "wires": []
    },
    {
        "id": "476c193aa2e5e17f",
        "type": "function",
        "z": "e87d33c62fc606c8",
        "g": "f73bca4c7b3fa24a",
        "name": "GET.manipulated variable",
        "func": "var local_mv = flow.get(\"Ctrl.Loop3.mv\");\nmsg.payload = local_mv;\nmsg.topic = \"Manipulate variable\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 600,
        "wires": [
            [
                "334e612c8ba020f5"
            ]
        ]
    },
    {
        "id": "334e612c8ba020f5",
        "type": "ui_chart",
        "z": "e87d33c62fc606c8",
        "g": "f73bca4c7b3fa24a",
        "name": "",
        "group": "718989759ca7cebb",
        "order": 2,
        "width": 20,
        "height": 6,
        "label": "Manipulated variable",
        "chartType": "line",
        "legend": "true",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-20",
        "ymax": "100",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#fbff00",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 800,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "df40d05c0b650acd",
        "type": "function",
        "z": "e87d33c62fc606c8",
        "g": "f73bca4c7b3fa24a",
        "name": "GET.Set Point",
        "func": "var local_SetPoint = flow.get(\"setpoint3\");\nmsg.payload = local_SetPoint;\nmsg.topic = \"Set Point\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 720,
        "wires": [
            [
                "42b8d27ec63bada8"
            ]
        ]
    },
    {
        "id": "d3f793525ba89886",
        "type": "function",
        "z": "e87d33c62fc606c8",
        "g": "f73bca4c7b3fa24a",
        "name": "GET.Error",
        "func": "var local_mv = flow.get(\"Ctrl.Loop3.error\");\nmsg.payload = local_mv;\nmsg.topic = \"Error\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 640,
        "wires": [
            [
                "334e612c8ba020f5"
            ]
        ]
    },
    {
        "id": "efefe14ecf28779d",
        "type": "function",
        "z": "e87d33c62fc606c8",
        "g": "e12dad24f2e30dd7",
        "name": "Enable OFF",
        "func": "for (let i = 0; i < 3; i++) {\n    if (msg.payload === false) {\n        msg.enable = 1;\n    } else {\n        msg.enable = 0;\n    }\n    \n    msg.mv = 0;\n    node.send(msg); // Envie a mensagem no final de cada iteração\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 100,
        "wires": [
            [
                "2c42739bbd909737"
            ]
        ]
    },
    {
        "id": "8a3f461ddf5ee468",
        "type": "moleculer-DAQ_AO_U_WT",
        "z": "e87d33c62fc606c8",
        "g": "4480fb045a7f8d92",
        "broker": "63ebd62b2640f3f7",
        "name": "Pump 2",
        "topic": "",
        "options": "{}",
        "ident": "4",
        "out": "Channel_2",
        "stack": "0",
        "x": 580,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "2c42739bbd909737",
        "type": "moleculer-DAQ_AO_U_WT",
        "z": "e87d33c62fc606c8",
        "g": "e12dad24f2e30dd7",
        "broker": "63ebd62b2640f3f7",
        "name": "Pump 2",
        "topic": "",
        "options": "{}",
        "ident": "5",
        "out": "Channel_2",
        "stack": "0",
        "x": 600,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "8c0ae7a7c66042b1",
        "type": "debug",
        "z": "e87d33c62fc606c8",
        "g": "e12dad24f2e30dd7",
        "name": "Line pressure",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 140,
        "wires": []
    },
    {
        "id": "7c298a3ca28f4a0e",
        "type": "inject",
        "z": "e87d33c62fc606c8",
        "g": "e12dad24f2e30dd7",
        "name": "Trigger [enable]",
        "props": [
            {
                "p": "enable",
                "v": "Eneable",
                "vt": "flow"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "x": 150,
        "y": 180,
        "wires": [
            [
                "13c790cf4c272916"
            ]
        ]
    },
    {
        "id": "13c790cf4c272916",
        "type": "function",
        "z": "e87d33c62fc606c8",
        "g": "e12dad24f2e30dd7",
        "name": "",
        "func": " if(msg.enable == 1){\n   msg.payload = true\n   return msg;\n }else{\n    msg.payload = false\n    return msg;\n }",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 180,
        "wires": [
            [
                "26637ac156a4f327"
            ]
        ]
    },
    {
        "id": "e62ca43880eabaa0",
        "type": "function",
        "z": "e87d33c62fc606c8",
        "g": "42c4050def517ecb",
        "name": "Sinus wave - Generator",
        "func": "//Sine wave function calculation\nvar x = flow.get(\"My_arc001\") + ((Math.PI * 2)/300); // ===300 points (seconds) in the arc\nflow.set(\"My_arc001\", x)\nvar SinGen = Math.sin(x);  // === It varies from +1 to -1\nif (flow.get(\"My_arc001\") >= (Math.PI * 2)) { flow.set(\"My_arc001\", 0.0) };\n\n//Scaling [ Y-Y0 = m.(X-X0) ]\nvar VoutMax = 55;\nvar VoutMin = 15;\nvar AngCoef = 2 / (VoutMax - VoutMin);\nvar Vout = ((SinGen+1)/AngCoef) + VoutMin ;\n\n//var Vout = SinGen;\n\n//flow Var Level Setpoint definition\nflow.set(\"SinusSetpoint\", Vout);\nmsg.payload = Vout;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "//O código adicionado aqui será executado uma vez\n// sempre que o nó for iniciado.\n\nflow.set(\"My_arc001\", 0.0); //Varies the number from 0 to Pi*2 (in rad mode)",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 120,
        "wires": [
            [
                "b4529c39009f4eb5"
            ]
        ]
    },
    {
        "id": "b4529c39009f4eb5",
        "type": "function",
        "z": "e87d33c62fc606c8",
        "g": "42c4050def517ecb",
        "name": "Ctrl.Loop3.setpoint",
        "func": "flow.set(\"Ctrl.Loop3.setpoint\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "526f554d6149b968",
        "type": "inject",
        "z": "e87d33c62fc606c8",
        "g": "42c4050def517ecb",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.25",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "select_setpoint_03",
        "payloadType": "flow",
        "x": 890,
        "y": 160,
        "wires": [
            [
                "c2a96bb464145167"
            ]
        ]
    },
    {
        "id": "e0d55baa09ca0693",
        "type": "function",
        "z": "e87d33c62fc606c8",
        "g": "42c4050def517ecb",
        "name": "select_setpoint_Line_pressure",
        "func": "flow.set(\"select_setpoint_03\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "c2a96bb464145167",
        "type": "switch",
        "z": "e87d33c62fc606c8",
        "g": "42c4050def517ecb",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1110,
        "y": 160,
        "wires": [
            [
                "e62ca43880eabaa0"
            ],
            [
                "6ccbd5672da27bd3"
            ],
            [
                "85ba078991fbf6f3"
            ]
        ]
    },
    {
        "id": "85ba078991fbf6f3",
        "type": "function",
        "z": "e87d33c62fc606c8",
        "g": "42c4050def517ecb",
        "name": "Triangle wave - Generator   .",
        "func": "//Triangle wave function calculation\nvar VoutMin = 10;\nvar VoutMax = 55;\n// coef > 1, wave more steep\n// coef = 1, wave in 45 degrees\n// coef < 1, wave less steep\nvar coef = 0.20\nvar Vout = flow.get(\"tri\") + (flow.get(\"signal\")* coef);\nflow.set(\"tri\", Vout);\n\n//Definition if it count up or counts down\nif (Vout <= VoutMin) { flow.set(\"signal\", 1);}\n                else { ; }\nif (Vout >= VoutMax) { flow.set(\"signal\",-1);}\n                else { ; }              \n\nflow.set(\"TriangleSetpoint\", Vout);\nmsg.payload = Vout;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "//O código adicionado aqui será executado uma vez\n// sempre que o nó for iniciado.\nvar VoutMin = 10;\nflow.set(\"tri\",VoutMin);\nflow.set(\"signal\", 1);",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 220,
        "wires": [
            [
                "b4529c39009f4eb5"
            ]
        ]
    },
    {
        "id": "6ccbd5672da27bd3",
        "type": "function",
        "z": "e87d33c62fc606c8",
        "g": "42c4050def517ecb",
        "name": "Cosinus wave - Generator",
        "func": "//Cosine wave function calculation\n//Sine wave function calculation\nvar x = flow.get(\"My_arc002\") + ((Math.PI *2)/300); //300 points in the arc\nflow.set(\"My_arc002\", x)\nif (flow.get(\"My_arc002\") >= (Math.PI *2)) { flow.set(\"My_arc002\", 0.0) };\nvar CosGen = Math.cos(x);\n\n//Scaling [ Y-Y0 = m.(X-X0) ]\nvar VoutMax = 55;\nvar VoutMin = 10;\nvar AngCoef = 2 / (VoutMax - VoutMin);\nvar Vout = ((CosGen+1)/AngCoef) + VoutMin ;\n\n//flow Var Level Setpoint definition\nflow.set(\"CosinusSetpoint\", Vout);\nmsg.payload = Vout;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "//O código adicionado aqui será executado uma vez\n// sempre que o nó for iniciado.\n\nflow.set(\"My_arc002\", 0.0); //Varies the number from 0 to Pi/2 (in rad mode)",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 180,
        "wires": [
            [
                "b4529c39009f4eb5"
            ]
        ]
    },
    {
        "id": "3faba50ff9e35a5c",
        "type": "ui_text",
        "z": "e87d33c62fc606c8",
        "g": "42c4050def517ecb",
        "group": "0dd7e1bf0b208734",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Select setpoint",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 880,
        "y": 300,
        "wires": []
    },
    {
        "id": "2bd03a3ff56b5fa9",
        "type": "ui_dropdown",
        "z": "e87d33c62fc606c8",
        "g": "42c4050def517ecb",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select Setpoint",
        "group": "0dd7e1bf0b208734",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Sinus Setpoint",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Cosinus Setpoint",
                "value": 3,
                "type": "num"
            },
            {
                "label": "Triangle Setpoint",
                "value": 4,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 860,
        "y": 340,
        "wires": [
            [
                "e0d55baa09ca0693"
            ]
        ]
    },
    {
        "id": "39bb74f5a3aee95d",
        "type": "ui_numeric",
        "z": "e87d33c62fc606c8",
        "g": "ded0df8381430a9c",
        "name": "",
        "label": "Kp",
        "tooltip": "",
        "group": "0dd7e1bf0b208734",
        "order": 6,
        "width": 4,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "30",
        "step": "0.1",
        "className": "",
        "x": 1250,
        "y": 580,
        "wires": [
            [
                "f6402395b4bac4ec"
            ]
        ]
    },
    {
        "id": "f6402395b4bac4ec",
        "type": "function",
        "z": "e87d33c62fc606c8",
        "g": "ded0df8381430a9c",
        "name": "Kp",
        "func": "flow.set(\"Kp_3\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "dc302697ae327bef",
        "type": "ui_numeric",
        "z": "e87d33c62fc606c8",
        "g": "ded0df8381430a9c",
        "name": "",
        "label": "Td",
        "tooltip": "",
        "group": "0dd7e1bf0b208734",
        "order": 9,
        "width": 4,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "30",
        "step": "0.1",
        "className": "",
        "x": 1250,
        "y": 640,
        "wires": [
            [
                "9732a4893a357d43"
            ]
        ]
    },
    {
        "id": "9732a4893a357d43",
        "type": "function",
        "z": "e87d33c62fc606c8",
        "g": "ded0df8381430a9c",
        "name": "Td",
        "func": "flow.set(\"Td_3\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "68a76c40bff8c2a7",
        "type": "function",
        "z": "e87d33c62fc606c8",
        "g": "ded0df8381430a9c",
        "name": "Ti",
        "func": "flow.set(\"Ti_3\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "ae6699b0a058bb3e",
        "type": "ui_numeric",
        "z": "e87d33c62fc606c8",
        "g": "ded0df8381430a9c",
        "name": "",
        "label": "Ti",
        "tooltip": "",
        "group": "0dd7e1bf0b208734",
        "order": 12,
        "width": 4,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "className": "",
        "x": 1250,
        "y": 700,
        "wires": [
            [
                "68a76c40bff8c2a7"
            ]
        ]
    },
    {
        "id": "42af03e22a571061",
        "type": "ui_text",
        "z": "e87d33c62fc606c8",
        "g": "ded0df8381430a9c",
        "group": "0dd7e1bf0b208734",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Select Pid 4.0 Paramas",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1330,
        "y": 540,
        "wires": []
    },
    {
        "id": "27de17b79b18d520",
        "type": "ui_button",
        "z": "e87d33c62fc606c8",
        "g": "ded0df8381430a9c",
        "name": "",
        "group": "0dd7e1bf0b208734",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Kp Standart",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1.2",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 1070,
        "y": 580,
        "wires": [
            [
                "39bb74f5a3aee95d"
            ]
        ]
    },
    {
        "id": "316fa82cfc1b3509",
        "type": "ui_button",
        "z": "e87d33c62fc606c8",
        "g": "ded0df8381430a9c",
        "name": "",
        "group": "0dd7e1bf0b208734",
        "order": 8,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Td Standart",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 1070,
        "y": 640,
        "wires": [
            [
                "dc302697ae327bef"
            ]
        ]
    },
    {
        "id": "010b398f6eff0b4d",
        "type": "ui_button",
        "z": "e87d33c62fc606c8",
        "g": "ded0df8381430a9c",
        "name": "",
        "group": "0dd7e1bf0b208734",
        "order": 11,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Ti Standart",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1.5",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 1070,
        "y": 700,
        "wires": [
            [
                "ae6699b0a058bb3e"
            ]
        ]
    },
    {
        "id": "2a57b6c569510a01",
        "type": "inject",
        "z": "e87d33c62fc606c8",
        "g": "4480fb045a7f8d92",
        "name": "Trigger [enable, SP, PV, kp, td, ti]",
        "props": [
            {
                "p": "enable",
                "v": "Eneable",
                "vt": "flow"
            },
            {
                "p": "setpoint",
                "v": "Ctrl.Loop3.setpoint",
                "vt": "flow"
            },
            {
                "p": "pv",
                "v": "PIT118",
                "vt": "global"
            },
            {
                "p": "kp",
                "v": "Kp_3",
                "vt": "flow"
            },
            {
                "p": "td",
                "v": "Td_3",
                "vt": "flow"
            },
            {
                "p": "ti",
                "v": "Ti_3",
                "vt": "flow"
            }
        ],
        "repeat": "0.25",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "x": 200,
        "y": 280,
        "wires": [
            [
                "0ecb355e2ba80579"
            ]
        ]
    },
    {
        "id": "5ed5ddf8a3920add",
        "type": "comment",
        "z": "e87d33c62fc606c8",
        "name": "configuracao de valvulas",
        "info": "valvula controlada em 30\ne valvula mecanica em zero",
        "x": 870,
        "y": 40,
        "wires": []
    },
    {
        "id": "4abcbc41b2ea018b",
        "type": "function",
        "z": "e87d33c62fc606c8",
        "g": "e12dad24f2e30dd7",
        "name": "Enable electro valve",
        "func": "for (let i = 0; i < 3; i++) {\n    if (msg.payload === true) {\n        msg.enable = 1;\n        msg.mv = 30;\n    } else {\n        msg.enable = 0;\n        msg.mv = 100;\n    }\n    \n   \n    node.send(msg); // Envie a mensagem no final de cada iteração\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 60,
        "wires": [
            [
                "6674b447332b4bc5"
            ]
        ]
    },
    {
        "id": "6674b447332b4bc5",
        "type": "moleculer-DAQ_AO_U_WT",
        "z": "e87d33c62fc606c8",
        "g": "e12dad24f2e30dd7",
        "broker": "63ebd62b2640f3f7",
        "name": "Electro valve",
        "topic": "",
        "options": "{}",
        "ident": "5",
        "out": "Channel_3",
        "stack": "0",
        "x": 610,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "157fd467e3db1248",
        "type": "function",
        "z": "e87d33c62fc606c8",
        "g": "f73bca4c7b3fa24a",
        "name": "pv",
        "func": "var local_pv = flow.get(\"Ctrl.Loop3.pv\");\nmsg.payload = local_pv;\nmsg.topic = \"Process variable\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 680,
        "wires": [
            [
                "42b8d27ec63bada8"
            ]
        ]
    },
    {
        "id": "a85be4ace50c1d9d",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "55a90ea75bdf1ffc",
        "name": "AAS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 1070,
        "y": 680,
        "wires": [
            [
                "639d4f31bf46f230"
            ]
        ]
    },
    {
        "id": "2e7966329a68427b",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "55a90ea75bdf1ffc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 680,
        "wires": []
    },
    {
        "id": "639d4f31bf46f230",
        "type": "moleculer-call",
        "z": "a2e6abde87c3c115",
        "g": "55a90ea75bdf1ffc",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "pit118_daq.aas",
        "options": "{}",
        "x": 1300,
        "y": 680,
        "wires": [
            [
                "2e7966329a68427b"
            ]
        ]
    },
    {
        "id": "528c93715cc4eef4",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "55a90ea75bdf1ffc",
        "name": "SM OperationalData",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"idShortSubmodel\":\"OperationalData\", \"idShortSubmodelElement\":\"Percentage\", \"format\":\"complete\"}",
        "payloadType": "json",
        "x": 1110,
        "y": 720,
        "wires": [
            [
                "07519ef8085fd292"
            ]
        ]
    },
    {
        "id": "b5c19b7c14bdd96d",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "55a90ea75bdf1ffc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 720,
        "wires": []
    },
    {
        "id": "07519ef8085fd292",
        "type": "moleculer-call",
        "z": "a2e6abde87c3c115",
        "g": "55a90ea75bdf1ffc",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "pit118_daq.aas",
        "options": "{}",
        "x": 1300,
        "y": 720,
        "wires": [
            [
                "b5c19b7c14bdd96d"
            ]
        ]
    },
    {
        "id": "728049732b9bef53",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "55a90ea75bdf1ffc",
        "name": "SE Percentage",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"idShortSubmodel\":\"OperationalData\", \"idShortSubmodelElement\":\"Percentage\", \"format\":\"value\"}",
        "payloadType": "json",
        "x": 1100,
        "y": 760,
        "wires": [
            [
                "e8c5462a186dea82"
            ]
        ]
    },
    {
        "id": "2b7deffd3e6322fc",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "55a90ea75bdf1ffc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 760,
        "wires": []
    },
    {
        "id": "e8c5462a186dea82",
        "type": "moleculer-call",
        "z": "a2e6abde87c3c115",
        "g": "55a90ea75bdf1ffc",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "pit118_daq.aas",
        "options": "{}",
        "x": 1300,
        "y": 760,
        "wires": [
            [
                "2b7deffd3e6322fc"
            ]
        ]
    },
    {
        "id": "ed3badedccae9aa7",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "55a90ea75bdf1ffc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1080,
        "y": 880,
        "wires": [
            [
                "a46b2ef1c48787a7"
            ]
        ]
    },
    {
        "id": "a46b2ef1c48787a7",
        "type": "OpcUa-Item",
        "z": "a2e6abde87c3c115",
        "g": "55a90ea75bdf1ffc",
        "item": "ns=3;i=1135",
        "datatype": "Double",
        "value": "",
        "name": "",
        "x": 1240,
        "y": 880,
        "wires": [
            [
                "d79cbfe0694d95b7"
            ]
        ]
    },
    {
        "id": "d79cbfe0694d95b7",
        "type": "OpcUa-Client",
        "z": "a2e6abde87c3c115",
        "g": "55a90ea75bdf1ffc",
        "endpoint": "8c2ad77a986bc998",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": 1,
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "",
        "x": 1420,
        "y": 880,
        "wires": [
            [
                "525feabc4e37a236"
            ],
            []
        ]
    },
    {
        "id": "525feabc4e37a236",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "55a90ea75bdf1ffc",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1580,
        "y": 880,
        "wires": []
    },
    {
        "id": "53df1da2d55589e5",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "55a90ea75bdf1ffc",
        "name": "SE Pressure",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"idShortSubmodel\":\"OperationalData\", \"idShortSubmodelElement\":\"Pressure\", \"format\":\"value\"}",
        "payloadType": "json",
        "x": 1090,
        "y": 800,
        "wires": [
            [
                "091426c448b72d26"
            ]
        ]
    },
    {
        "id": "ecc9f54da9e9a018",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "55a90ea75bdf1ffc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 800,
        "wires": []
    },
    {
        "id": "091426c448b72d26",
        "type": "moleculer-call",
        "z": "a2e6abde87c3c115",
        "g": "55a90ea75bdf1ffc",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "pit118_daq.aas",
        "options": "{}",
        "x": 1300,
        "y": 800,
        "wires": [
            [
                "ecc9f54da9e9a018"
            ]
        ]
    },
    {
        "id": "6712417c55bacf4a",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "55a90ea75bdf1ffc",
        "name": "SE Current",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"idShortSubmodel\":\"OperationalData\", \"idShortSubmodelElement\":\"Current\", \"format\":\"value\"}",
        "payloadType": "json",
        "x": 1080,
        "y": 840,
        "wires": [
            [
                "fce9946343fae525"
            ]
        ]
    },
    {
        "id": "31cedfcb32edfca2",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "55a90ea75bdf1ffc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 840,
        "wires": []
    },
    {
        "id": "fce9946343fae525",
        "type": "moleculer-call",
        "z": "a2e6abde87c3c115",
        "g": "55a90ea75bdf1ffc",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "pit118_daq.aas",
        "options": "{}",
        "x": 1300,
        "y": 840,
        "wires": [
            [
                "31cedfcb32edfca2"
            ]
        ]
    },
    {
        "id": "da7880849acd0471",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "b0df24934cee3bbc",
        "name": "AAS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 1070,
        "y": 420,
        "wires": [
            [
                "080dadf2445f7e6c"
            ]
        ]
    },
    {
        "id": "5f81903601aa5980",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "b0df24934cee3bbc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 420,
        "wires": []
    },
    {
        "id": "080dadf2445f7e6c",
        "type": "moleculer-call",
        "z": "a2e6abde87c3c115",
        "g": "b0df24934cee3bbc",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "lit125_daq.aas",
        "options": "{}",
        "x": 1300,
        "y": 420,
        "wires": [
            [
                "5f81903601aa5980"
            ]
        ]
    },
    {
        "id": "18d698e9d8e40ed3",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "b0df24934cee3bbc",
        "name": "SM OperationalData",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"idShortSubmodel\":\"OperationalData\", \"idShortSubmodelElement\":\"Percentage\", \"format\":\"complete\"}",
        "payloadType": "json",
        "x": 1110,
        "y": 460,
        "wires": [
            [
                "e97a9e0f8202e6c7"
            ]
        ]
    },
    {
        "id": "09a3ec427cfa4618",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "b0df24934cee3bbc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 460,
        "wires": []
    },
    {
        "id": "e97a9e0f8202e6c7",
        "type": "moleculer-call",
        "z": "a2e6abde87c3c115",
        "g": "b0df24934cee3bbc",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "lit125_daq.aas",
        "options": "{}",
        "x": 1300,
        "y": 460,
        "wires": [
            [
                "09a3ec427cfa4618"
            ]
        ]
    },
    {
        "id": "3b7c1f69f9dc3e7a",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "b0df24934cee3bbc",
        "name": "SE Percentage",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"idShortSubmodel\":\"OperationalData\", \"idShortSubmodelElement\":\"Percentage\", \"format\":\"value\"}",
        "payloadType": "json",
        "x": 1100,
        "y": 500,
        "wires": [
            [
                "3456f2268877143a"
            ]
        ]
    },
    {
        "id": "3ca87e81034b0805",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "b0df24934cee3bbc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 500,
        "wires": []
    },
    {
        "id": "3456f2268877143a",
        "type": "moleculer-call",
        "z": "a2e6abde87c3c115",
        "g": "b0df24934cee3bbc",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "lit125_daq.aas",
        "options": "{}",
        "x": 1300,
        "y": 500,
        "wires": [
            [
                "3ca87e81034b0805"
            ]
        ]
    },
    {
        "id": "f8307a4dfb9d8a74",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "b0df24934cee3bbc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1080,
        "y": 580,
        "wires": [
            [
                "8cafb37d21f6209c"
            ]
        ]
    },
    {
        "id": "8cafb37d21f6209c",
        "type": "OpcUa-Item",
        "z": "a2e6abde87c3c115",
        "g": "b0df24934cee3bbc",
        "item": "ns=3;i=504",
        "datatype": "Double",
        "value": "",
        "name": "",
        "x": 1240,
        "y": 580,
        "wires": [
            [
                "f2e7dfe51b9c489d"
            ]
        ]
    },
    {
        "id": "f2e7dfe51b9c489d",
        "type": "OpcUa-Client",
        "z": "a2e6abde87c3c115",
        "g": "b0df24934cee3bbc",
        "endpoint": "f0f78b51406b5649",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": 1,
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "",
        "x": 1420,
        "y": 580,
        "wires": [
            [
                "dbc44a553a47a58a"
            ],
            []
        ]
    },
    {
        "id": "dbc44a553a47a58a",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "b0df24934cee3bbc",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1580,
        "y": 580,
        "wires": []
    },
    {
        "id": "e2a72607e6c2042e",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "86b433e968f1e72f",
        "name": "AAS Read",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 1080,
        "y": 160,
        "wires": [
            [
                "1a3fe053bc2fe382"
            ]
        ]
    },
    {
        "id": "a3ab5cebb324e655",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "86b433e968f1e72f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 160,
        "wires": []
    },
    {
        "id": "1a3fe053bc2fe382",
        "type": "moleculer-call",
        "z": "a2e6abde87c3c115",
        "g": "86b433e968f1e72f",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "fit116_daq.aas",
        "options": "{}",
        "x": 1380,
        "y": 160,
        "wires": [
            [
                "a3ab5cebb324e655"
            ]
        ]
    },
    {
        "id": "73cd83b2f3e9b989",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "86b433e968f1e72f",
        "name": "SM OperationalData  Read",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"idShortSubmodel\":\"OperationalData\", \"idShortSubmodelElement\":\"Percentage\", \"format\":\"complete\"}",
        "payloadType": "json",
        "x": 1130,
        "y": 200,
        "wires": [
            [
                "fb6a92e76c9ff3b1"
            ]
        ]
    },
    {
        "id": "e8a691b079d2fdad",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "86b433e968f1e72f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 200,
        "wires": []
    },
    {
        "id": "fb6a92e76c9ff3b1",
        "type": "moleculer-call",
        "z": "a2e6abde87c3c115",
        "g": "86b433e968f1e72f",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "fit116_daq.aas",
        "options": "{}",
        "x": 1380,
        "y": 200,
        "wires": [
            [
                "e8a691b079d2fdad"
            ]
        ]
    },
    {
        "id": "e64de53c4cacbad2",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "86b433e968f1e72f",
        "name": "SE Percentage  Read",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"idShortSubmodel\":\"OperationalData\", \"idShortSubmodelElement\":\"Percentage\", \"format\":\"value\"}",
        "payloadType": "json",
        "x": 1120,
        "y": 240,
        "wires": [
            [
                "c7a8c314cdee76b3"
            ]
        ]
    },
    {
        "id": "5c950cef333c7fd7",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "86b433e968f1e72f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 240,
        "wires": []
    },
    {
        "id": "c7a8c314cdee76b3",
        "type": "moleculer-call",
        "z": "a2e6abde87c3c115",
        "g": "86b433e968f1e72f",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "fit116_daq.aas",
        "options": "{}",
        "x": 1380,
        "y": 240,
        "wires": [
            [
                "5c950cef333c7fd7"
            ]
        ]
    },
    {
        "id": "41a8c877fb897181",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "86b433e968f1e72f",
        "name": "Read",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1070,
        "y": 320,
        "wires": [
            [
                "e262cbc7852730e8"
            ]
        ]
    },
    {
        "id": "e262cbc7852730e8",
        "type": "OpcUa-Item",
        "z": "a2e6abde87c3c115",
        "g": "86b433e968f1e72f",
        "item": "ns=3;i=504",
        "datatype": "Double",
        "value": "",
        "name": "",
        "x": 1240,
        "y": 320,
        "wires": [
            [
                "f7fd3ef0ba124f09"
            ]
        ]
    },
    {
        "id": "f7fd3ef0ba124f09",
        "type": "OpcUa-Client",
        "z": "a2e6abde87c3c115",
        "g": "86b433e968f1e72f",
        "endpoint": "b95983c7eb59384c",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": 1,
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "",
        "x": 1420,
        "y": 320,
        "wires": [
            [
                "7838e6dda5583da9"
            ],
            []
        ]
    },
    {
        "id": "7838e6dda5583da9",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "86b433e968f1e72f",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1580,
        "y": 320,
        "wires": []
    },
    {
        "id": "daefee22c7a80c7a",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "ad803a65c77249c9",
        "name": "AAS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 1070,
        "y": 980,
        "wires": [
            [
                "da3f922c8d7caa5c"
            ]
        ]
    },
    {
        "id": "d10ec790bf829e82",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "ad803a65c77249c9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 980,
        "wires": []
    },
    {
        "id": "da3f922c8d7caa5c",
        "type": "moleculer-call",
        "z": "a2e6abde87c3c115",
        "g": "ad803a65c77249c9",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "pit129_daq.aas",
        "options": "{}",
        "x": 1300,
        "y": 980,
        "wires": [
            [
                "d10ec790bf829e82"
            ]
        ]
    },
    {
        "id": "4d13efe74499fc46",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "ad803a65c77249c9",
        "name": "SM OperationalData",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"idShortSubmodel\":\"OperationalData\", \"idShortSubmodelElement\":\"Percentage\", \"format\":\"complete\"}",
        "payloadType": "json",
        "x": 1110,
        "y": 1020,
        "wires": [
            [
                "56a6f27627dd650b"
            ]
        ]
    },
    {
        "id": "6949f6809cf78551",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "ad803a65c77249c9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 1020,
        "wires": []
    },
    {
        "id": "56a6f27627dd650b",
        "type": "moleculer-call",
        "z": "a2e6abde87c3c115",
        "g": "ad803a65c77249c9",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "pit129_daq.aas",
        "options": "{}",
        "x": 1300,
        "y": 1020,
        "wires": [
            [
                "6949f6809cf78551"
            ]
        ]
    },
    {
        "id": "f5f572321faab077",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "ad803a65c77249c9",
        "name": "SE Percentage",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"idShortSubmodel\":\"OperationalData\", \"idShortSubmodelElement\":\"Percentage\", \"format\":\"value\"}",
        "payloadType": "json",
        "x": 1100,
        "y": 1060,
        "wires": [
            [
                "954e1166481fef95"
            ]
        ]
    },
    {
        "id": "ef32aacbdd1df6af",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "ad803a65c77249c9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 1060,
        "wires": []
    },
    {
        "id": "954e1166481fef95",
        "type": "moleculer-call",
        "z": "a2e6abde87c3c115",
        "g": "ad803a65c77249c9",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "pit129_daq.aas",
        "options": "{}",
        "x": 1300,
        "y": 1060,
        "wires": [
            [
                "ef32aacbdd1df6af"
            ]
        ]
    },
    {
        "id": "08ded1b5d6812c79",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "ad803a65c77249c9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1080,
        "y": 1140,
        "wires": [
            [
                "7a6605bc6192b2b1"
            ]
        ]
    },
    {
        "id": "7a6605bc6192b2b1",
        "type": "OpcUa-Item",
        "z": "a2e6abde87c3c115",
        "g": "ad803a65c77249c9",
        "item": "ns=3;i=1135",
        "datatype": "Double",
        "value": "",
        "name": "",
        "x": 1240,
        "y": 1140,
        "wires": [
            [
                "89865e5f21dcbe4e"
            ]
        ]
    },
    {
        "id": "89865e5f21dcbe4e",
        "type": "OpcUa-Client",
        "z": "a2e6abde87c3c115",
        "g": "ad803a65c77249c9",
        "endpoint": "9883401a98aa8537",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": 1,
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "",
        "x": 1420,
        "y": 1140,
        "wires": [
            [
                "d95c4b5b8e45bf61"
            ],
            []
        ]
    },
    {
        "id": "d95c4b5b8e45bf61",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "ad803a65c77249c9",
        "name": "debug 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1580,
        "y": 1140,
        "wires": []
    },
    {
        "id": "cb8e6365d913ed3d",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "f10df41018357765",
        "name": "Test write",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "{\"ti\":\"0.14\",\"td\":\"0.16\",\"kp\":\"2.22\",\"pv\":\"49.3\",\"setpoint\":\"50.6\",\"error\":\"0.35\",\"integrative\":\"0.24\",\"manipulatedVariable\":\"60.0\",\"time\":\"0\"}",
        "payloadType": "str",
        "x": 1920,
        "y": 160,
        "wires": [
            [
                "1f6148278ffbe8c7"
            ]
        ]
    },
    {
        "id": "ebc6cfe4c4adcf17",
        "type": "OpcUa-Client",
        "z": "a2e6abde87c3c115",
        "g": "f10df41018357765",
        "endpoint": "3bfe3760a65a6fe2",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": 1,
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "Write",
        "x": 2290,
        "y": 160,
        "wires": [
            [
                "e4606791e69ab946"
            ],
            []
        ]
    },
    {
        "id": "e4606791e69ab946",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "f10df41018357765",
        "name": "Parammeters",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2460,
        "y": 160,
        "wires": []
    },
    {
        "id": "13ceed822e5328d3",
        "type": "OpcUa-Client",
        "z": "a2e6abde87c3c115",
        "g": "f10df41018357765",
        "endpoint": "3bfe3760a65a6fe2",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": 1,
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "Read",
        "x": 2290,
        "y": 220,
        "wires": [
            [
                "c50968f8282511d3"
            ],
            []
        ]
    },
    {
        "id": "c50968f8282511d3",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "f10df41018357765",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2440,
        "y": 220,
        "wires": []
    },
    {
        "id": "1c0e93f01598e0c8",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "f10df41018357765",
        "name": "Test read",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1920,
        "y": 220,
        "wires": [
            [
                "bc9990322b6814ea"
            ]
        ]
    },
    {
        "id": "bc9990322b6814ea",
        "type": "OpcUa-Item",
        "z": "a2e6abde87c3c115",
        "g": "f10df41018357765",
        "item": "br=/Objects/AASROOT/pic118_pid4/OperationalData/Payload/Value",
        "datatype": "String",
        "value": "",
        "name": "",
        "x": 2140,
        "y": 220,
        "wires": [
            [
                "13ceed822e5328d3"
            ]
        ]
    },
    {
        "id": "1f6148278ffbe8c7",
        "type": "OpcUa-Item",
        "z": "a2e6abde87c3c115",
        "g": "f10df41018357765",
        "item": "ns=3;i=1477",
        "datatype": "String",
        "value": "",
        "name": "",
        "x": 2140,
        "y": 160,
        "wires": [
            [
                "ebc6cfe4c4adcf17"
            ]
        ]
    },
    {
        "id": "d97290ffdd64cc2f",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "275351d1deafbdbd",
        "name": "Test write",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "{\"ti\":\"0.14\",\"td\":\"0.16\",\"kp\":\"2.22\",\"pv\":\"49.3\",\"setpoint\":\"50.6\",\"error\":\"0.35\",\"integrative\":\"0.24\",\"manipulatedVariable\":\"60.0\",\"time\":\"0\"}",
        "payloadType": "str",
        "x": 1920,
        "y": 1120,
        "wires": [
            [
                "27701ff1b5d02afe"
            ]
        ]
    },
    {
        "id": "6239251d36209274",
        "type": "OpcUa-Client",
        "z": "a2e6abde87c3c115",
        "g": "275351d1deafbdbd",
        "endpoint": "69ae20a702e2e3d7",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": 1,
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "Write",
        "x": 2290,
        "y": 1120,
        "wires": [
            [
                "248686688e28c1ce"
            ],
            []
        ]
    },
    {
        "id": "248686688e28c1ce",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "275351d1deafbdbd",
        "name": "Parammeters",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2460,
        "y": 1120,
        "wires": []
    },
    {
        "id": "9fc17d7e0d0cdb0c",
        "type": "OpcUa-Client",
        "z": "a2e6abde87c3c115",
        "g": "275351d1deafbdbd",
        "endpoint": "69ae20a702e2e3d7",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": 1,
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "Read",
        "x": 2290,
        "y": 1180,
        "wires": [
            [
                "b161f4fc06716e6f"
            ],
            []
        ]
    },
    {
        "id": "b161f4fc06716e6f",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "275351d1deafbdbd",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2440,
        "y": 1180,
        "wires": []
    },
    {
        "id": "1ad932c1244e46ef",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "275351d1deafbdbd",
        "name": "Test read",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1920,
        "y": 1180,
        "wires": [
            [
                "6a12a59ba9a6b012"
            ]
        ]
    },
    {
        "id": "6a12a59ba9a6b012",
        "type": "OpcUa-Item",
        "z": "a2e6abde87c3c115",
        "g": "275351d1deafbdbd",
        "item": "br=/Objects/AASROOT/pic118_pid4/OperationalData/Payload/Value",
        "datatype": "String",
        "value": "",
        "name": "",
        "x": 2140,
        "y": 1180,
        "wires": [
            [
                "9fc17d7e0d0cdb0c"
            ]
        ]
    },
    {
        "id": "27701ff1b5d02afe",
        "type": "OpcUa-Item",
        "z": "a2e6abde87c3c115",
        "g": "275351d1deafbdbd",
        "item": "ns=3;i=1477",
        "datatype": "String",
        "value": "",
        "name": "",
        "x": 2140,
        "y": 1120,
        "wires": [
            [
                "6239251d36209274"
            ]
        ]
    },
    {
        "id": "85b1fdfa73a69ccd",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "b3dc3e98c6700bcd",
        "name": "Test write",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "{\"ti\":\"0.14\",\"td\":\"0.16\",\"kp\":\"2.22\",\"pv\":\"49.3\",\"setpoint\":\"50.6\",\"error\":\"0.35\",\"integrative\":\"0.24\",\"manipulatedVariable\":\"60.0\",\"time\":\"0\"}",
        "payloadType": "str",
        "x": 1920,
        "y": 320,
        "wires": [
            [
                "adfee6e17b717828"
            ]
        ]
    },
    {
        "id": "4b6019393b83e3b7",
        "type": "OpcUa-Client",
        "z": "a2e6abde87c3c115",
        "g": "b3dc3e98c6700bcd",
        "endpoint": "55ef72f70b1594bd",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": 1,
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "Write",
        "x": 2290,
        "y": 320,
        "wires": [
            [
                "11b3a2a3ace338c8"
            ],
            []
        ]
    },
    {
        "id": "11b3a2a3ace338c8",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "b3dc3e98c6700bcd",
        "name": "Parammeters",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2460,
        "y": 320,
        "wires": []
    },
    {
        "id": "7cc557f7aabbbe0d",
        "type": "OpcUa-Client",
        "z": "a2e6abde87c3c115",
        "g": "b3dc3e98c6700bcd",
        "endpoint": "55ef72f70b1594bd",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": 1,
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "Read",
        "x": 2290,
        "y": 380,
        "wires": [
            [
                "7c344a644483758b"
            ],
            []
        ]
    },
    {
        "id": "7c344a644483758b",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "b3dc3e98c6700bcd",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2440,
        "y": 380,
        "wires": []
    },
    {
        "id": "f6ef0f4807b5defd",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "b3dc3e98c6700bcd",
        "name": "Test read",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1920,
        "y": 380,
        "wires": [
            [
                "92d910c0e51b8330"
            ]
        ]
    },
    {
        "id": "92d910c0e51b8330",
        "type": "OpcUa-Item",
        "z": "a2e6abde87c3c115",
        "g": "b3dc3e98c6700bcd",
        "item": "br=/Objects/AASROOT/pic118_pid4/OperationalData/Payload/Value",
        "datatype": "String",
        "value": "",
        "name": "",
        "x": 2140,
        "y": 380,
        "wires": [
            [
                "7cc557f7aabbbe0d"
            ]
        ]
    },
    {
        "id": "adfee6e17b717828",
        "type": "OpcUa-Item",
        "z": "a2e6abde87c3c115",
        "g": "b3dc3e98c6700bcd",
        "item": "ns=3;i=1477",
        "datatype": "String",
        "value": "",
        "name": "",
        "x": 2140,
        "y": 320,
        "wires": [
            [
                "4b6019393b83e3b7"
            ]
        ]
    },
    {
        "id": "eff39aabd40ed5ca",
        "type": "comment",
        "z": "a2e6abde87c3c115",
        "g": "92873329bc006b1f",
        "name": "",
        "info": "",
        "x": 120,
        "y": 120,
        "wires": []
    },
    {
        "id": "e11d97bb28623586",
        "type": "comment",
        "z": "a2e6abde87c3c115",
        "g": "24e10c133b467af2",
        "name": "",
        "info": "",
        "x": 120,
        "y": 220,
        "wires": []
    },
    {
        "id": "4efe4dac33e0d43e",
        "type": "comment",
        "z": "a2e6abde87c3c115",
        "g": "66db1ca4c7b21fca",
        "name": "",
        "info": "",
        "x": 120,
        "y": 320,
        "wires": []
    },
    {
        "id": "3b7e7a078c921569",
        "type": "comment",
        "z": "a2e6abde87c3c115",
        "g": "470c6c293f51294b",
        "name": "OPC UA funcionando escrita e leitura replicar para os outros",
        "info": "",
        "x": 3100,
        "y": 840,
        "wires": []
    },
    {
        "id": "da9948ae2cae9d9e",
        "type": "comment",
        "z": "a2e6abde87c3c115",
        "g": "470c6c293f51294b",
        "name": "OPC UA não esta funcionando",
        "info": "",
        "x": 3010,
        "y": 500,
        "wires": []
    },
    {
        "id": "4f34cf4508b0c96d",
        "type": "comment",
        "z": "a2e6abde87c3c115",
        "g": "470c6c293f51294b",
        "name": "não esta funcionando nenhum tipo de requisição",
        "info": "",
        "x": 3060,
        "y": 140,
        "wires": []
    },
    {
        "id": "c94e5daf5b286752",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "201e1c1595fbf5df",
        "name": "AAS Read",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 3040,
        "y": 900,
        "wires": [
            [
                "1e276f522f2d0b73"
            ]
        ]
    },
    {
        "id": "32a021e7d248f409",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "201e1c1595fbf5df",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3530,
        "y": 900,
        "wires": []
    },
    {
        "id": "1e276f522f2d0b73",
        "type": "moleculer-call",
        "z": "a2e6abde87c3c115",
        "g": "201e1c1595fbf5df",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "p2_daq.aas",
        "options": "{}",
        "x": 3350,
        "y": 900,
        "wires": [
            [
                "32a021e7d248f409"
            ]
        ]
    },
    {
        "id": "d788d84286500fda",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "201e1c1595fbf5df",
        "name": "SE Percentage 0 Write",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"idShortSubmodel\":\"OperationalData\",\"idShortSubmodelElement\":\"Percentage\",\"value\":\"00.00\"}",
        "payloadType": "json",
        "x": 3080,
        "y": 980,
        "wires": [
            [
                "0f357f8a7f6d6f82"
            ]
        ]
    },
    {
        "id": "30b79bed0d6feb0b",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "201e1c1595fbf5df",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3530,
        "y": 980,
        "wires": []
    },
    {
        "id": "0f357f8a7f6d6f82",
        "type": "moleculer-call",
        "z": "a2e6abde87c3c115",
        "g": "201e1c1595fbf5df",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "p2_daq.aas",
        "options": "{}",
        "x": 3350,
        "y": 980,
        "wires": [
            [
                "30b79bed0d6feb0b"
            ]
        ]
    },
    {
        "id": "4f1677c18d8eaa6b",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "201e1c1595fbf5df",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3530,
        "y": 940,
        "wires": []
    },
    {
        "id": "027b6e31af15dd9c",
        "type": "moleculer-call",
        "z": "a2e6abde87c3c115",
        "g": "201e1c1595fbf5df",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "p2_daq.aas",
        "options": "{}",
        "x": 3350,
        "y": 940,
        "wires": [
            [
                "4f1677c18d8eaa6b"
            ]
        ]
    },
    {
        "id": "368b2be8d150158c",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "201e1c1595fbf5df",
        "name": "SM OperationalData Read",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"idShortSubmodel\":\"OperationalData\", \"idShortSubmodelElement\":\"Percentage\", \"format\":\"complete\"}",
        "payloadType": "json",
        "x": 3090,
        "y": 940,
        "wires": [
            [
                "027b6e31af15dd9c"
            ]
        ]
    },
    {
        "id": "93fb0e00bce1217e",
        "type": "OpcUa-Client",
        "z": "a2e6abde87c3c115",
        "g": "201e1c1595fbf5df",
        "endpoint": "a8686de49781f383",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": 1,
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "Write",
        "x": 3390,
        "y": 1080,
        "wires": [
            [
                "328656bd08718605"
            ],
            []
        ]
    },
    {
        "id": "328656bd08718605",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "201e1c1595fbf5df",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3540,
        "y": 1080,
        "wires": []
    },
    {
        "id": "c4fe1598b1b3248f",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "201e1c1595fbf5df",
        "name": "Test write 50.00",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": " 50.00",
        "payloadType": "str",
        "x": 3040,
        "y": 1080,
        "wires": [
            [
                "1e7e9c58e5b5b99b"
            ]
        ]
    },
    {
        "id": "38f7ae047c306b98",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "201e1c1595fbf5df",
        "name": "Test write 00.00",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "00.00",
        "payloadType": "str",
        "x": 3040,
        "y": 1120,
        "wires": [
            [
                "1e7e9c58e5b5b99b"
            ]
        ]
    },
    {
        "id": "a51c03826cd1b1c8",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "201e1c1595fbf5df",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3540,
        "y": 1160,
        "wires": []
    },
    {
        "id": "272f4f2463a218cf",
        "type": "OpcUa-Client",
        "z": "a2e6abde87c3c115",
        "g": "201e1c1595fbf5df",
        "endpoint": "a8686de49781f383",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": 1,
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "Read",
        "x": 3390,
        "y": 1160,
        "wires": [
            [
                "a51c03826cd1b1c8"
            ],
            []
        ]
    },
    {
        "id": "8e9fc8340f44fe67",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "201e1c1595fbf5df",
        "name": "Test read",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3020,
        "y": 1160,
        "wires": [
            [
                "e52f55999be4eaf1"
            ]
        ]
    },
    {
        "id": "e52f55999be4eaf1",
        "type": "OpcUa-Item",
        "z": "a2e6abde87c3c115",
        "g": "201e1c1595fbf5df",
        "item": "br=/Objects/AASROOT/p2_daq/OperationalData/Percentage/Value",
        "datatype": "Boolean",
        "value": "",
        "name": "",
        "x": 3240,
        "y": 1160,
        "wires": [
            [
                "272f4f2463a218cf"
            ]
        ]
    },
    {
        "id": "1e7e9c58e5b5b99b",
        "type": "OpcUa-Item",
        "z": "a2e6abde87c3c115",
        "g": "201e1c1595fbf5df",
        "item": "ns=3;i=469",
        "datatype": "Double",
        "value": "",
        "name": "",
        "x": 3240,
        "y": 1080,
        "wires": [
            [
                "93fb0e00bce1217e"
            ]
        ]
    },
    {
        "id": "f25d374291d4e1ae",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "8de17ba9b6160bbc",
        "name": "AAS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 3010,
        "y": 560,
        "wires": [
            [
                "1d4da7df7e42ef8e"
            ]
        ]
    },
    {
        "id": "08fbe8547b64188e",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "8de17ba9b6160bbc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3510,
        "y": 560,
        "wires": []
    },
    {
        "id": "1d4da7df7e42ef8e",
        "type": "moleculer-call",
        "z": "a2e6abde87c3c115",
        "g": "8de17ba9b6160bbc",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "p1_daq.aas",
        "options": "{}",
        "x": 3230,
        "y": 560,
        "wires": [
            [
                "08fbe8547b64188e"
            ]
        ]
    },
    {
        "id": "bf8aad30eba0f30b",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "8de17ba9b6160bbc",
        "name": "SE Percentage",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"idShortSubmodel\":\"OperationalData\", \"idShortSubmodelElement\":\"Percentage\", \"value\":\"0.00\"}",
        "payloadType": "json",
        "x": 3040,
        "y": 640,
        "wires": [
            [
                "b914cca4f2c0e7bf"
            ]
        ]
    },
    {
        "id": "7c5a989562c9c7fa",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "8de17ba9b6160bbc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3510,
        "y": 640,
        "wires": []
    },
    {
        "id": "b914cca4f2c0e7bf",
        "type": "moleculer-call",
        "z": "a2e6abde87c3c115",
        "g": "8de17ba9b6160bbc",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "p1_daq.aas",
        "options": "{}",
        "x": 3230,
        "y": 640,
        "wires": [
            [
                "7c5a989562c9c7fa"
            ]
        ]
    },
    {
        "id": "0627785ff5313df7",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "8de17ba9b6160bbc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3510,
        "y": 600,
        "wires": []
    },
    {
        "id": "6b3108c55aec48d6",
        "type": "moleculer-call",
        "z": "a2e6abde87c3c115",
        "g": "8de17ba9b6160bbc",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "p1_daq.aas",
        "options": "{}",
        "x": 3230,
        "y": 600,
        "wires": [
            [
                "0627785ff5313df7"
            ]
        ]
    },
    {
        "id": "529f2b0ea628a705",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "8de17ba9b6160bbc",
        "name": "SM OperationalData",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"idShortSubmodel\":\"OperationalData\", \"idShortSubmodelElement\":\"Percentage\", \"format\":\"complete\"}",
        "payloadType": "json",
        "x": 3050,
        "y": 600,
        "wires": [
            [
                "6b3108c55aec48d6"
            ]
        ]
    },
    {
        "id": "915b6a9a058f5c09",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "8de17ba9b6160bbc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3040,
        "y": 700,
        "wires": [
            [
                "86563392ab6965be",
                "07dd0c4d3264bf08"
            ]
        ]
    },
    {
        "id": "86563392ab6965be",
        "type": "OpcUa-Item",
        "z": "a2e6abde87c3c115",
        "g": "8de17ba9b6160bbc",
        "item": "ns=3;i=469",
        "datatype": "String",
        "value": "10",
        "name": "",
        "x": 3200,
        "y": 700,
        "wires": [
            [
                "9b41a2859e2fb633"
            ]
        ]
    },
    {
        "id": "9b41a2859e2fb633",
        "type": "OpcUa-Client",
        "z": "a2e6abde87c3c115",
        "g": "8de17ba9b6160bbc",
        "endpoint": "c9722999d7a6ef78",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": 1,
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "",
        "x": 3380,
        "y": 700,
        "wires": [
            [
                "6bdf7e69d72f8b5a"
            ],
            []
        ]
    },
    {
        "id": "6bdf7e69d72f8b5a",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "8de17ba9b6160bbc",
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3540,
        "y": 700,
        "wires": []
    },
    {
        "id": "07dd0c4d3264bf08",
        "type": "OpcUa-Browser",
        "z": "a2e6abde87c3c115",
        "g": "8de17ba9b6160bbc",
        "endpoint": "c9722999d7a6ef78",
        "item": "",
        "datatype": "",
        "topic": "",
        "items": [],
        "name": "",
        "x": 3210,
        "y": 740,
        "wires": [
            [
                "67dd62c880646e61"
            ]
        ]
    },
    {
        "id": "67dd62c880646e61",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "8de17ba9b6160bbc",
        "name": "debug 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3540,
        "y": 740,
        "wires": []
    },
    {
        "id": "a30f32ac771d02e0",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "a69d88a61a140b67",
        "name": "AAS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 3010,
        "y": 200,
        "wires": [
            [
                "8ec9e5627b5571dc"
            ]
        ]
    },
    {
        "id": "a2f1ddf9f4f051e3",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "a69d88a61a140b67",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3530,
        "y": 200,
        "wires": []
    },
    {
        "id": "8ec9e5627b5571dc",
        "type": "moleculer-call",
        "z": "a2e6abde87c3c115",
        "g": "a69d88a61a140b67",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "lv122_daq.aas",
        "options": "{}",
        "x": 3260,
        "y": 200,
        "wires": [
            [
                "a2f1ddf9f4f051e3"
            ]
        ]
    },
    {
        "id": "543145fc7553ef80",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "a69d88a61a140b67",
        "name": "SE Percentage 0",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"idShortSubmodel\":\"OperationalData\", \"idShortSubmodelElement\":\"Percentage\", \"value\":\"0.00\"}",
        "payloadType": "json",
        "x": 3040,
        "y": 280,
        "wires": [
            [
                "8a4ae8f825daabdb"
            ]
        ]
    },
    {
        "id": "5c90409c70541eb0",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "a69d88a61a140b67",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3530,
        "y": 280,
        "wires": []
    },
    {
        "id": "8a4ae8f825daabdb",
        "type": "moleculer-call",
        "z": "a2e6abde87c3c115",
        "g": "a69d88a61a140b67",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "lv122_daq.aas",
        "options": "{}",
        "x": 3260,
        "y": 280,
        "wires": [
            [
                "5c90409c70541eb0"
            ]
        ]
    },
    {
        "id": "d7724de83d014e05",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "a69d88a61a140b67",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3530,
        "y": 240,
        "wires": []
    },
    {
        "id": "10a68136f884c78a",
        "type": "moleculer-call",
        "z": "a2e6abde87c3c115",
        "g": "a69d88a61a140b67",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "lv122_daq.aas",
        "options": "{}",
        "x": 3260,
        "y": 240,
        "wires": [
            [
                "d7724de83d014e05"
            ]
        ]
    },
    {
        "id": "f14925a2400f43da",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "a69d88a61a140b67",
        "name": "SM OperationalData",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"idShortSubmodel\":\"OperationalData\", \"idShortSubmodelElement\":\"Percentage\", \"format\":\"complete\"}",
        "payloadType": "json",
        "x": 3050,
        "y": 240,
        "wires": [
            [
                "10a68136f884c78a"
            ]
        ]
    },
    {
        "id": "0ae7e3ee8ca65a28",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "a69d88a61a140b67",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3040,
        "y": 380,
        "wires": [
            [
                "e1834628a3f0ac14",
                "2d15c13b6ccc8abd"
            ]
        ]
    },
    {
        "id": "e1834628a3f0ac14",
        "type": "OpcUa-Item",
        "z": "a2e6abde87c3c115",
        "g": "a69d88a61a140b67",
        "item": "ns=3;i=478",
        "datatype": "String",
        "value": "00.00",
        "name": "",
        "x": 3200,
        "y": 380,
        "wires": [
            [
                "105455fd917768a4"
            ]
        ]
    },
    {
        "id": "105455fd917768a4",
        "type": "OpcUa-Client",
        "z": "a2e6abde87c3c115",
        "g": "a69d88a61a140b67",
        "endpoint": "1ec1c3d4b52fa3ed",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": 1,
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "",
        "x": 3380,
        "y": 380,
        "wires": [
            [
                "03163a3f755f4cce"
            ],
            []
        ]
    },
    {
        "id": "03163a3f755f4cce",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "a69d88a61a140b67",
        "name": "debug 17",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3540,
        "y": 380,
        "wires": []
    },
    {
        "id": "2d15c13b6ccc8abd",
        "type": "OpcUa-Browser",
        "z": "a2e6abde87c3c115",
        "g": "a69d88a61a140b67",
        "endpoint": "1ec1c3d4b52fa3ed",
        "item": "",
        "datatype": "",
        "topic": "",
        "items": [],
        "name": "",
        "x": 3210,
        "y": 420,
        "wires": [
            [
                "89e59a71786eefd5"
            ]
        ]
    },
    {
        "id": "89e59a71786eefd5",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "a69d88a61a140b67",
        "name": "debug 18",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3540,
        "y": 420,
        "wires": []
    },
    {
        "id": "051c35ad45112f95",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "a69d88a61a140b67",
        "name": "SE Percentage 100",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"idShortSubmodel\":\"OperationalData\", \"idShortSubmodelElement\":\"Percentage\", \"value\":\"100.00\"}",
        "payloadType": "json",
        "x": 3050,
        "y": 320,
        "wires": [
            [
                "8a4ae8f825daabdb"
            ]
        ]
    },
    {
        "id": "f6f5992762f2eaef",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "b355f8f0cdc6368e",
        "name": "AAS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 1910,
        "y": 660,
        "wires": [
            [
                "8d737a82ea9f855a"
            ]
        ]
    },
    {
        "id": "45d628aaf8e37523",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "b355f8f0cdc6368e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2550,
        "y": 660,
        "wires": []
    },
    {
        "id": "8d737a82ea9f855a",
        "type": "moleculer-call",
        "z": "a2e6abde87c3c115",
        "g": "b355f8f0cdc6368e",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "pic118_pid4.aas",
        "options": "{}",
        "x": 2160,
        "y": 660,
        "wires": [
            [
                "45d628aaf8e37523"
            ]
        ]
    },
    {
        "id": "7bfa9810c6413a3c",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "b355f8f0cdc6368e",
        "name": "SE Parameters read",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"idShortSubmodel\":\"OperationalData\",\"idShortSubmodelElement\":\"Parameters\",\"format\":\"value\"}",
        "payloadType": "json",
        "x": 1950,
        "y": 740,
        "wires": [
            [
                "26d0c02cbd38a9cd"
            ]
        ]
    },
    {
        "id": "25116125c0dcb91f",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "b355f8f0cdc6368e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2550,
        "y": 740,
        "wires": []
    },
    {
        "id": "26d0c02cbd38a9cd",
        "type": "moleculer-call",
        "z": "a2e6abde87c3c115",
        "g": "b355f8f0cdc6368e",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "pic118_pid4.aas",
        "options": "{}",
        "x": 2160,
        "y": 740,
        "wires": [
            [
                "25116125c0dcb91f"
            ]
        ]
    },
    {
        "id": "18410950d325c9d2",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "b355f8f0cdc6368e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2550,
        "y": 780,
        "wires": []
    },
    {
        "id": "9ca82ed1cb7c0b73",
        "type": "moleculer-call",
        "z": "a2e6abde87c3c115",
        "g": "b355f8f0cdc6368e",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "pic118_pid4.aas",
        "options": "{}",
        "x": 2160,
        "y": 780,
        "wires": [
            [
                "18410950d325c9d2"
            ]
        ]
    },
    {
        "id": "b182de8d1d25579b",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "b355f8f0cdc6368e",
        "name": "SE Payload read",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"idShortSubmodel\":\"OperationalData\",\"idShortSubmodelElement\":\"Payload\",\"format\":\"value\"}",
        "payloadType": "json",
        "x": 1940,
        "y": 780,
        "wires": [
            [
                "9ca82ed1cb7c0b73"
            ]
        ]
    },
    {
        "id": "e7ffd1fbda974163",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "b355f8f0cdc6368e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2550,
        "y": 700,
        "wires": []
    },
    {
        "id": "ab1ef2c9d98d387f",
        "type": "moleculer-call",
        "z": "a2e6abde87c3c115",
        "g": "b355f8f0cdc6368e",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "pic118_pid4.aas",
        "options": "{}",
        "x": 2160,
        "y": 700,
        "wires": [
            [
                "e7ffd1fbda974163"
            ]
        ]
    },
    {
        "id": "e05866e558428b8d",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "b355f8f0cdc6368e",
        "name": "SE Parameters { } Write",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"idShortSubmodel\":\"OperationalData\",\"idShortSubmodelElement\":\"Parameters\",\"value\":{\"ti\":0.14,\"td\":0.16,\"kp\":2.22,\"pv\":50.3,\"setpoint\":30.6,\"error\":0.35,\"integrative\":0.24,\"manipulatedVariable\":60,\"time\":0}}",
        "payloadType": "json",
        "x": 1960,
        "y": 700,
        "wires": [
            [
                "ab1ef2c9d98d387f"
            ]
        ]
    },
    {
        "id": "7b4353329ac8d36e",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "b355f8f0cdc6368e",
        "name": "Test write",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "{\"ti\":0.14,\"td\":0.16,\"kp\":2.22,\"pv\":40.3,\"setpoint\":50.6,\"error\":0.35,\"integrative\":0.24,\"manipulatedVariable\":68.0,\"time\":0}",
        "payloadType": "str",
        "x": 1920,
        "y": 840,
        "wires": [
            [
                "2d8811a128a5e961"
            ]
        ]
    },
    {
        "id": "2d8811a128a5e961",
        "type": "OpcUa-Item",
        "z": "a2e6abde87c3c115",
        "g": "b355f8f0cdc6368e",
        "item": "ns=3;i=1477",
        "datatype": "String",
        "value": "",
        "name": "",
        "x": 2120,
        "y": 840,
        "wires": [
            [
                "9a217f97216cc0d8"
            ]
        ]
    },
    {
        "id": "9a217f97216cc0d8",
        "type": "OpcUa-Client",
        "z": "a2e6abde87c3c115",
        "g": "b355f8f0cdc6368e",
        "endpoint": "f23add3fd8d371dd",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": 1,
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "Write",
        "x": 2290,
        "y": 840,
        "wires": [
            [
                "d30f39233629d3c1"
            ],
            []
        ]
    },
    {
        "id": "d30f39233629d3c1",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "b355f8f0cdc6368e",
        "name": "Parameters",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2550,
        "y": 840,
        "wires": []
    },
    {
        "id": "64b2a70d019420e9",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "b355f8f0cdc6368e",
        "name": "Test read",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1920,
        "y": 960,
        "wires": [
            [
                "f5e21fe5f5c0a6b5"
            ]
        ]
    },
    {
        "id": "f5e21fe5f5c0a6b5",
        "type": "OpcUa-Item",
        "z": "a2e6abde87c3c115",
        "g": "b355f8f0cdc6368e",
        "item": "br=/Objects/AASROOT/pic118_pid4/OperationalData/Payload/Value",
        "datatype": "String",
        "value": "",
        "name": "",
        "x": 2080,
        "y": 960,
        "wires": [
            [
                "68b8c57b912240b9"
            ]
        ]
    },
    {
        "id": "68b8c57b912240b9",
        "type": "OpcUa-Client",
        "z": "a2e6abde87c3c115",
        "g": "b355f8f0cdc6368e",
        "endpoint": "f23add3fd8d371dd",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": 1,
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "Read",
        "x": 2230,
        "y": 960,
        "wires": [
            [
                "a90dd4968ee56cf8"
            ],
            []
        ]
    },
    {
        "id": "9315b76255f8e1f1",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "b355f8f0cdc6368e",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2560,
        "y": 960,
        "wires": []
    },
    {
        "id": "059858865bb847c8",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "b355f8f0cdc6368e",
        "name": "Test read",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1920,
        "y": 900,
        "wires": [
            [
                "aa8afa287a7f9282"
            ]
        ]
    },
    {
        "id": "aa8afa287a7f9282",
        "type": "OpcUa-Item",
        "z": "a2e6abde87c3c115",
        "g": "b355f8f0cdc6368e",
        "item": "br=/Objects/AASROOT/pic118_pid4/OperationalData/Parameters/Value",
        "datatype": "String",
        "value": "",
        "name": "",
        "x": 2080,
        "y": 900,
        "wires": [
            [
                "c4e2d8ca292c8345"
            ]
        ]
    },
    {
        "id": "c4e2d8ca292c8345",
        "type": "OpcUa-Client",
        "z": "a2e6abde87c3c115",
        "g": "b355f8f0cdc6368e",
        "endpoint": "f23add3fd8d371dd",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": 1,
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "Read",
        "x": 2230,
        "y": 900,
        "wires": [
            [
                "f1e69d5e3913b2c6"
            ],
            []
        ]
    },
    {
        "id": "2ff14605ea739896",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "b355f8f0cdc6368e",
        "name": "Parameters",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2550,
        "y": 900,
        "wires": []
    },
    {
        "id": "f1e69d5e3913b2c6",
        "type": "function",
        "z": "a2e6abde87c3c115",
        "g": "b355f8f0cdc6368e",
        "name": "stringToJSON",
        "func": "\nlet data = msg.payload; // Assuming msg.payload contains the string \"{}\"\ntry {\n    msg.payload = JSON.parse(data); // Convert the string into a JSON object\n} catch (e) {\n    node.error(\"Invalid JSON format: \" + e);\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2380,
        "y": 900,
        "wires": [
            [
                "2ff14605ea739896"
            ]
        ]
    },
    {
        "id": "a90dd4968ee56cf8",
        "type": "function",
        "z": "a2e6abde87c3c115",
        "g": "b355f8f0cdc6368e",
        "name": "stringToJSON",
        "func": "\nlet data = msg.payload; // Assuming msg.payload contains the string \"{}\"\ntry {\n    msg.payload = JSON.parse(data); // Convert the string into a JSON object\n} catch (e) {\n    node.error(\"Invalid JSON format: \" + e);\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2380,
        "y": 960,
        "wires": [
            [
                "9315b76255f8e1f1"
            ]
        ]
    },
    {
        "id": "inject1",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "g": "b355f8f0cdc6368e",
        "name": "Send Parameters",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"idShortSubmodel\":\"OperationalData\",\"idShortSubmodelElement\":\"Parameters\",\"value\":{\"ti\":0.14,\"td\":0.16,\"kp\":2.22,\"pv\":50.3,\"setpoint\":30.6,\"error\":0.35,\"integrative\":0.24,\"manipulatedVariable\":60,\"time\":0}}",
        "payloadType": "json",
        "x": 1940,
        "y": 580,
        "wires": [
            [
                "http1"
            ]
        ]
    },
    {
        "id": "http1",
        "type": "http request",
        "z": "a2e6abde87c3c115",
        "g": "b355f8f0cdc6368e",
        "name": "Send POST Request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.201:3005/api/pic118_pid4/aas",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2190,
        "y": 580,
        "wires": [
            [
                "debug1"
            ]
        ]
    },
    {
        "id": "debug1",
        "type": "debug",
        "z": "a2e6abde87c3c115",
        "g": "b355f8f0cdc6368e",
        "name": "Response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2560,
        "y": 580,
        "wires": []
    },
    {
        "id": "2e322767a0bb703e",
        "type": "comment",
        "z": "a2e6abde87c3c115",
        "g": "b355f8f0cdc6368e",
        "name": "Versão nova 3.0.2 tentar fazer o controle com essa. Se der certo replico para os demais serviços de controle.",
        "info": "",
        "x": 2250,
        "y": 540,
        "wires": []
    },
    {
        "id": "486b52a5561a699c",
        "type": "inject",
        "z": "a2e6abde87c3c115",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "c5eee587.009a88",
        "type": "inject",
        "z": "c1e582b2.7e3dc",
        "name": "Test without Topic",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 180,
        "wires": [
            [
                "5f721d20.c74eb4"
            ]
        ]
    },
    {
        "id": "470a5816.70d2f8",
        "type": "debug",
        "z": "c1e582b2.7e3dc",
        "name": "Browse",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 760,
        "y": 180,
        "wires": []
    },
    {
        "id": "486b9c7f.892244",
        "type": "OpcUa-Item",
        "z": "c1e582b2.7e3dc",
        "item": "ns=2;s=1:PST-007-Alarm-Level@Training?VALUE",
        "datatype": "double",
        "value": "",
        "name": "",
        "x": 380,
        "y": 280,
        "wires": [
            [
                "f0864f8a.10649"
            ]
        ]
    },
    {
        "id": "f0864f8a.10649",
        "type": "OpcUa-Client",
        "z": "c1e582b2.7e3dc",
        "endpoint": "7290d8b0.f713d8",
        "action": "read",
        "time": 10000,
        "name": "Read",
        "x": 590,
        "y": 340,
        "wires": [
            [
                "6618ad86.b92174"
            ],
            []
        ]
    },
    {
        "id": "6618ad86.b92174",
        "type": "debug",
        "z": "c1e582b2.7e3dc",
        "name": "Read",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 750,
        "y": 340,
        "wires": []
    },
    {
        "id": "b54547b8.f84df8",
        "type": "inject",
        "z": "c1e582b2.7e3dc",
        "name": "Test read",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 340,
        "wires": [
            [
                "486b9c7f.892244",
                "777f4a48.793394",
                "a4fe7e50.10f4b",
                "ee44e61a.9ef058"
            ]
        ]
    },
    {
        "id": "13359d18.d43f23",
        "type": "OpcUa-Item",
        "z": "c1e582b2.7e3dc",
        "item": "ns=2;s=1:PST-007-Alarm-Level@Training?SETPOINT",
        "datatype": "Double",
        "value": "",
        "name": "",
        "x": 380,
        "y": 440,
        "wires": [
            [
                "7baea106.60165"
            ]
        ]
    },
    {
        "id": "7baea106.60165",
        "type": "OpcUa-Client",
        "z": "c1e582b2.7e3dc",
        "endpoint": "7290d8b0.f713d8",
        "action": "write",
        "time": 10000,
        "name": "Write",
        "x": 590,
        "y": 440,
        "wires": [
            [
                "f90e6b13.52bad8"
            ],
            []
        ]
    },
    {
        "id": "f90e6b13.52bad8",
        "type": "debug",
        "z": "c1e582b2.7e3dc",
        "name": "Write",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 750,
        "y": 440,
        "wires": []
    },
    {
        "id": "fd381405.f82898",
        "type": "OpcUa-Client",
        "z": "c1e582b2.7e3dc",
        "endpoint": "7290d8b0.f713d8",
        "action": "subscribe",
        "time": "5",
        "timeUnit": "s",
        "name": "Subscribe",
        "x": 580,
        "y": 240,
        "wires": [
            [
                "807f2a5b.9740c8"
            ],
            []
        ]
    },
    {
        "id": "807f2a5b.9740c8",
        "type": "debug",
        "z": "c1e582b2.7e3dc",
        "name": "Subs",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 750,
        "y": 240,
        "wires": []
    },
    {
        "id": "777f4a48.793394",
        "type": "OpcUa-Item",
        "z": "c1e582b2.7e3dc",
        "item": "ns=2;s=1:PST-007-Alarm-Level@Training?HIGH_SCALE",
        "datatype": "double",
        "value": "",
        "name": "",
        "x": 380,
        "y": 320,
        "wires": [
            [
                "f0864f8a.10649"
            ]
        ]
    },
    {
        "id": "a4fe7e50.10f4b",
        "type": "OpcUa-Item",
        "z": "c1e582b2.7e3dc",
        "item": "ns=2;s=1:PST-007-Alarm-Level@Training?LOW_SCALE",
        "datatype": "double",
        "value": "",
        "name": "",
        "x": 380,
        "y": 360,
        "wires": [
            [
                "f0864f8a.10649"
            ]
        ]
    },
    {
        "id": "51b76b2e.a38d14",
        "type": "OpcUa-Item",
        "z": "c1e582b2.7e3dc",
        "item": "ns=2;s=1:PST-007-Alarm-Level@Training?SETPOINT",
        "datatype": "double",
        "value": "4",
        "name": "",
        "x": 380,
        "y": 240,
        "wires": [
            [
                "fd381405.f82898"
            ]
        ]
    },
    {
        "id": "633b6abc.947534",
        "type": "inject",
        "z": "c1e582b2.7e3dc",
        "name": "Test subs (250ms)",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "250",
        "payloadType": "num",
        "x": 130,
        "y": 240,
        "wires": [
            [
                "51b76b2e.a38d14"
            ]
        ]
    },
    {
        "id": "38a57fd8.732b3",
        "type": "inject",
        "z": "c1e582b2.7e3dc",
        "name": "Test write 2.5",
        "props": [
            {
                "p": "payload",
                "v": " 2.5",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": " 2.5",
        "payloadType": "str",
        "x": 150,
        "y": 420,
        "wires": [
            [
                "13359d18.d43f23"
            ]
        ]
    },
    {
        "id": "32ebb557.602eea",
        "type": "inject",
        "z": "c1e582b2.7e3dc",
        "name": "Test write 3.5",
        "props": [
            {
                "p": "payload",
                "v": " 3.5",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": " 3.5",
        "payloadType": "string",
        "x": 150,
        "y": 460,
        "wires": [
            [
                "13359d18.d43f23"
            ]
        ]
    },
    {
        "id": "ee44e61a.9ef058",
        "type": "OpcUa-Item",
        "z": "c1e582b2.7e3dc",
        "item": "ns=2;s=1:PST-007-Alarm-Level@Training?SETPOINT",
        "datatype": "double",
        "value": "4",
        "name": "",
        "x": 380,
        "y": 400,
        "wires": [
            [
                "f0864f8a.10649"
            ]
        ]
    },
    {
        "id": "f4dc2e15.d4872",
        "type": "OpcUa-Client",
        "z": "c1e582b2.7e3dc",
        "endpoint": "7290d8b0.f713d8",
        "action": "browse",
        "time": 10000,
        "name": "Browse",
        "x": 580,
        "y": 120,
        "wires": [
            [
                "8a361383.b5992"
            ],
            []
        ]
    },
    {
        "id": "17f810e6.2ef63f",
        "type": "inject",
        "z": "c1e582b2.7e3dc",
        "name": "Test with Topic",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "ns=2;s=0:IGSS Objects/Area/Cases/Diagram/Boiler@Cases/Template",
        "payload": "",
        "payloadType": "str",
        "x": 140,
        "y": 120,
        "wires": [
            [
                "f4dc2e15.d4872"
            ]
        ]
    },
    {
        "id": "2dd2de5a.91ff52",
        "type": "debug",
        "z": "c1e582b2.7e3dc",
        "name": "Browse",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 940,
        "y": 120,
        "wires": []
    },
    {
        "id": "8a361383.b5992",
        "type": "template",
        "z": "c1e582b2.7e3dc",
        "name": "OpcUa-Item",
        "field": "payload",
        "format": "handlebars",
        "template": "[{\"id\":\"4b12ca9b.e7e184\",\"type\":\"OpcUa-Item\",\"item\":\"{{topic}}\",\"datatype\":\"opcua.DataType.Double\",\"value\":\"\",\"name\":\"{{browseName}}\",\"x\":251,\"y\":334,\"z\":\"30ffd2ee.59fdd6\",\"wires\":[[\"70dd1397.3c8e44\"]]}]",
        "x": 770,
        "y": 120,
        "wires": [
            [
                "2dd2de5a.91ff52"
            ]
        ]
    },
    {
        "id": "5f721d20.c74eb4",
        "type": "OpcUa-Browser",
        "z": "c1e582b2.7e3dc",
        "endpoint": "",
        "item": "",
        "datatype": "",
        "topic": "ns=2;s=0:IGSS Objects/(All)",
        "items": [],
        "x": 550,
        "y": 180,
        "wires": [
            [
                "470a5816.70d2f8"
            ]
        ]
    },
    {
        "id": "c15223dc9c7396b9",
        "type": "s7 in",
        "z": "577adf7330f55551",
        "endpoint": "d85e110240fcd352",
        "mode": "all",
        "variable": "",
        "diff": false,
        "name": "",
        "x": 90,
        "y": 280,
        "wires": [
            [
                "0eeab11882791938"
            ]
        ]
    },
    {
        "id": "2db26d8437955a50",
        "type": "function",
        "z": "577adf7330f55551",
        "name": "Finds Variable",
        "func": "var station = msg.station;\nvar variableClass = msg.variableClass;\nvar variable = msg.variable;\nvar topic = \"br=/Objects/AASROOT/\"+ station + \"/OperationalData/\" + variableClass + \"/\" + variable + \"/Value\";\nmsg = {\n    variable: msg.variable,\n    datatype: \"Boolean\",\n    topic: topic\n}\nreturn msg;\n\n// topic: \"br=/Objects/AASROOT/myStation1/Handling2/Feedback/Q_94_Claw_2_Cart/Value\"",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 480,
        "wires": [
            [
                "ab8bb6f55607d091"
            ]
        ]
    },
    {
        "id": "0eeab11882791938",
        "type": "trigger",
        "z": "577adf7330f55551",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 150,
        "y": 320,
        "wires": [
            [
                "963163cddb981524"
            ]
        ]
    },
    {
        "id": "963163cddb981524",
        "type": "function",
        "z": "577adf7330f55551",
        "name": "Creates List",
        "func": "// Obter o payload original\nlet payload = msg.payload;\n\n// Criar um novo objeto para armazenar as variáveis filtradas\nlet filteredPayload = {};\n\n// Filtrar apenas as variáveis que contém \"_80_\" no nome\nfor (let key in payload) {\n    if (key.match(/_8[0-9]_/)) {\n        filteredPayload[key] = payload[key];\n    }\n}\n\n// Definir o payload filtrado como a nova mensagem de saída\nmsg.payload = filteredPayload;\n\n// Retornar a mensagem\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 360,
        "wires": [
            [
                "f60bdffc19498bec"
            ]
        ]
    },
    {
        "id": "ab8bb6f55607d091",
        "type": "OpcUa-Client",
        "z": "577adf7330f55551",
        "endpoint": "bdc48601.ebf958",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": 1,
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "OPC Client",
        "x": 330,
        "y": 520,
        "wires": [
            [
                "d165983abb272a8b"
            ],
            []
        ]
    },
    {
        "id": "e761456f07090d1f",
        "type": "OpcUa-Server",
        "z": "577adf7330f55551",
        "port": "53881",
        "name": "OPC Server",
        "endpoint": "UA/nodeset",
        "users": "",
        "nodesetDir": "D:\\DOCS\\UNESP\\PFC\\AAS\\assets\\08_Distribution",
        "autoAcceptUnknownCertificate": true,
        "registerToDiscovery": false,
        "constructDefaultAddressSpace": false,
        "allowAnonymous": true,
        "endpointNone": true,
        "endpointSign": true,
        "endpointSignEncrypt": true,
        "endpointBasic128Rsa15": true,
        "endpointBasic256": true,
        "endpointBasic256Sha256": true,
        "maxNodesPerBrowse": 0,
        "maxNodesPerHistoryReadData": 0,
        "maxNodesPerHistoryReadEvents": 0,
        "maxNodesPerHistoryUpdateData": 0,
        "maxNodesPerRead": 0,
        "maxNodesPerWrite": 0,
        "maxNodesPerMethodCall": 0,
        "maxNodesPerRegisterNodes": 0,
        "maxNodesPerNodeManagement": 0,
        "maxMonitoredItemsPerCall": 0,
        "maxNodesPerHistoryUpdateEvents": 0,
        "maxNodesPerTranslateBrowsePathsToNodeIds": 0,
        "maxConnectionsPerEndpoint": 20,
        "maxMessageSize": 4096,
        "maxBufferSize": 4096,
        "maxSessions": 20,
        "x": 180,
        "y": 100,
        "wires": [
            [
                "ed3ac167c8f26f6b"
            ]
        ]
    },
    {
        "id": "f60bdffc19498bec",
        "type": "delay",
        "z": "577adf7330f55551",
        "name": "6s delay",
        "pauseType": "delay",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 200,
        "y": 400,
        "wires": [
            [
                "208ec3c775e286b4"
            ]
        ]
    },
    {
        "id": "94ee81d8bcb81645",
        "type": "inject",
        "z": "577adf7330f55551",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 220,
        "wires": [
            [
                "415de57a32e1dc42"
            ]
        ]
    },
    {
        "id": "415de57a32e1dc42",
        "type": "function",
        "z": "577adf7330f55551",
        "name": "Header",
        "func": "let csvHeader = \"Variable;Namespace;Identifier\\n\";  // Define o cabeçalho do CSV\nmsg.payload = csvHeader;  // Coloca o cabeçalho como a carga útil\nmsg.append = false;  // Sobrescreve o arquivo\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 220,
        "wires": [
            [
                "8783561b4d362182"
            ]
        ]
    },
    {
        "id": "8783561b4d362182",
        "type": "file",
        "z": "577adf7330f55551",
        "name": "CSV File",
        "filename": "D:\\DOCS\\UNESP\\PFC\\AAS\\assets\\08_Distribution\\variable.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 380,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "a8eac940989331e7",
        "type": "file",
        "z": "577adf7330f55551",
        "name": "CSV File",
        "filename": "D:\\DOCS\\UNESP\\PFC\\AAS\\assets\\08_Distribution\\variable.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 540,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "d165983abb272a8b",
        "type": "function",
        "z": "577adf7330f55551",
        "name": "Return of query",
        "func": "let csvLine = `${msg.variable};${msg.topic}\\n`;  // Cria uma nova linha com os valores\nmsg.payload = csvLine;  // Coloca a linha CSV como a carga útil\nmsg.append = true;  // Adiciona ao final do arquivo, sem sobrescrever\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 560,
        "wires": [
            [
                "a8eac940989331e7"
            ]
        ]
    },
    {
        "id": "208ec3c775e286b4",
        "type": "function",
        "z": "577adf7330f55551",
        "name": "Creates Classes",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\nvar station = \"Distribution_80\";\nvar variableClass = \"\";\n\nfor (let key in variables) {\n    if (variables.hasOwnProperty(key)) {\n        if (key.includes(\"I_\")) variableClass = \"Output\";\n        if (key.includes(\"O_\")) variableClass = \"Input\";\n        if (key.includes(\"F_\")) variableClass = \"Feedback\";\n        if (key.includes(\"C_\")) variableClass = \"Control\";\n        if (variableClass != \"\") node.send({ variable: key, variableClass: variableClass, station: station });  // Envia uma mensagem com a linha atual\n    }\n}\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 440,
        "wires": [
            [
                "2db26d8437955a50"
            ]
        ]
    },
    {
        "id": "680b91065d0e3efd",
        "type": "file in",
        "z": "577adf7330f55551",
        "name": "CSV File",
        "filename": "D:\\DOCS\\UNESP\\PFC\\AAS\\assets\\08_Distribution\\variable.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 920,
        "y": 260,
        "wires": [
            [
                "f17642017f6486ca"
            ]
        ]
    },
    {
        "id": "f17642017f6486ca",
        "type": "function",
        "z": "577adf7330f55551",
        "name": "Variable => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 300,
        "wires": [
            [
                "4abdbd26520559fa"
            ]
        ]
    },
    {
        "id": "8c6b208861b087c8",
        "type": "file in",
        "z": "577adf7330f55551",
        "name": "CSV File",
        "filename": "D:\\DOCS\\UNESP\\PFC\\AAS\\assets\\08_Distribution\\variable.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 1090,
        "y": 560,
        "wires": [
            [
                "482a974c99d4bf0d"
            ]
        ]
    },
    {
        "id": "482a974c99d4bf0d",
        "type": "function",
        "z": "577adf7330f55551",
        "name": "ns;i => Variable",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst namespaceIdentifier = msg.identifier;  // O Namespace;Identifier para buscar\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\nfunction getVariable(namespaceIdentifier) {\n    const [namespace, identifier] = namespaceIdentifier.split(';').map(value => value.trim());\n    const row = data.find(r => r.Namespace === namespace && r.Identifier === identifier);\n    if (row) {\n        return row.Variable;\n    }\n    return null;\n}\n\nmsg.topic = getVariable(namespaceIdentifier);\nmsg.payload = msg.value;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 560,
        "wires": [
            [
                "c7542b90f412141e"
            ]
        ]
    },
    {
        "id": "6b897c609b1cdb50",
        "type": "s7 in",
        "z": "577adf7330f55551",
        "endpoint": "d85e110240fcd352",
        "mode": "all-split",
        "variable": "",
        "diff": true,
        "name": "",
        "x": 710,
        "y": 100,
        "wires": [
            [
                "4cf57608b6e5cce5",
                "14761e64248e9aaa"
            ]
        ]
    },
    {
        "id": "4cf57608b6e5cce5",
        "type": "function",
        "z": "577adf7330f55551",
        "name": "Filter for Distribution [80] ",
        "func": "// Obter o payload original\nlet payload = msg.payload;\nlet topic = msg.topic;\n\nif (topic.match(/_8[0-9]_/)) return msg;\nelse return null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 100,
        "wires": [
            [
                "51f3b11902fd7e6c"
            ]
        ]
    },
    {
        "id": "4abdbd26520559fa",
        "type": "function",
        "z": "577adf7330f55551",
        "name": "Change Variable Value",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 340,
        "wires": [
            [
                "95e6116b06be6fea",
                "1aecb5504ca62dbc"
            ]
        ]
    },
    {
        "id": "95e6116b06be6fea",
        "type": "OpcUa-Client",
        "z": "577adf7330f55551",
        "endpoint": "bdc48601.ebf958",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": 1,
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "",
        "x": 1260,
        "y": 340,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "51f3b11902fd7e6c",
        "type": "link out",
        "z": "577adf7330f55551",
        "name": "Dist_AAS_Read",
        "mode": "link",
        "links": [],
        "x": 1085,
        "y": 100,
        "wires": []
    },
    {
        "id": "14761e64248e9aaa",
        "type": "function",
        "z": "577adf7330f55551",
        "name": "Msg Adjustment",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {};\n\nmsg = {variable: variable, value: value, datatype: \"Boolean\"};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 220,
        "wires": [
            [
                "680b91065d0e3efd"
            ]
        ]
    },
    {
        "id": "704b8f64090d0146",
        "type": "link in",
        "z": "577adf7330f55551",
        "name": "AAS_Write",
        "links": [],
        "x": 765,
        "y": 220,
        "wires": [
            [
                "14761e64248e9aaa"
            ]
        ]
    },
    {
        "id": "8f667e6c28468e1e",
        "type": "function",
        "z": "577adf7330f55551",
        "name": "Msg Adjustment",
        "func": "msg.identifier = msg.payload.variableName;\nmsg.value = msg.payload.variableValue;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 560,
        "wires": [
            [
                "8c6b208861b087c8"
            ]
        ]
    },
    {
        "id": "ed3ac167c8f26f6b",
        "type": "link out",
        "z": "577adf7330f55551",
        "name": "Server-Out",
        "mode": "link",
        "links": [
            "2627495adef67cc0"
        ],
        "x": 285,
        "y": 100,
        "wires": []
    },
    {
        "id": "2627495adef67cc0",
        "type": "link in",
        "z": "577adf7330f55551",
        "name": "AAS_Translation_In",
        "links": [
            "ed3ac167c8f26f6b"
        ],
        "x": 835,
        "y": 560,
        "wires": [
            [
                "8f667e6c28468e1e"
            ]
        ]
    },
    {
        "id": "c7542b90f412141e",
        "type": "link out",
        "z": "577adf7330f55551",
        "name": "AAS_Translate_Out",
        "mode": "link",
        "links": [],
        "x": 1365,
        "y": 560,
        "wires": []
    },
    {
        "id": "42ee143dbb157c83",
        "type": "comment",
        "z": "577adf7330f55551",
        "name": "CSV File",
        "info": "",
        "x": 220,
        "y": 180,
        "wires": []
    },
    {
        "id": "b0ee9faa44ca995b",
        "type": "comment",
        "z": "577adf7330f55551",
        "name": "Reading PLC Variables",
        "info": "",
        "x": 880,
        "y": 60,
        "wires": []
    },
    {
        "id": "8f73321eaaf18fb5",
        "type": "comment",
        "z": "577adf7330f55551",
        "name": "Writing on PLC variables",
        "info": "",
        "x": 930,
        "y": 180,
        "wires": []
    },
    {
        "id": "25ee714a01f0ac66",
        "type": "comment",
        "z": "577adf7330f55551",
        "name": "OPC-UA Variables Translation",
        "info": "",
        "x": 1150,
        "y": 520,
        "wires": []
    },
    {
        "id": "e3e74a5a8ff27dcd",
        "type": "comment",
        "z": "577adf7330f55551",
        "name": "OPC-UA Server",
        "info": "",
        "x": 180,
        "y": 60,
        "wires": []
    },
    {
        "id": "1aecb5504ca62dbc",
        "type": "debug",
        "z": "577adf7330f55551",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 380,
        "wires": []
    },
    {
        "id": "inject-node",
        "type": "inject",
        "z": "869cfb4518914541",
        "name": "Trigger Date Command",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 320,
        "wires": [
            [
                "exec-node"
            ]
        ]
    },
    {
        "id": "exec-node",
        "type": "exec",
        "z": "869cfb4518914541",
        "command": "date",
        "addpay": false,
        "append": "",
        "useSpawn": false,
        "timer": "",
        "oldrc": false,
        "name": "Execute Date Command",
        "x": 570,
        "y": 320,
        "wires": [
            [
                "debug-node"
            ],
            [],
            []
        ]
    },
    {
        "id": "debug-node",
        "type": "debug",
        "z": "869cfb4518914541",
        "name": "Output Date",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 810,
        "y": 320,
        "wires": []
    },
    {
        "id": "47540566cb5c3c11",
        "type": "function",
        "z": "3fc007a97f3fcca5",
        "g": "6b11f1b1853e2e50",
        "name": "Function ADD",
        "func": "let response = Number(msg.payload.a) + Number(msg.payload.b);\nmsg.payload = response;\nnode.send([null,null,msg]);\nmsg.emit('test.emit',\"OK\");\nmsg.broadcast('test.bcast',\"OK\")\n\nmsg.call('math.sub',{a:9,b:2},{meta:{y:33}}).then((data)=>{\n    msg.payload = data\n    node.send([null,msg])\n}).catch((err)=>{\n    node.error(err, msg)\n})\n\n\nmsg.call('$none.actions').then((data)=>{\n    msg.payload = data\n    node.send([null,msg])\n}).catch((err)=>{\n    node.error(err, msg)\n})\n\nreturn [msg]; // or node.send([msg])",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 120,
        "wires": [
            [
                "c67d9c6f9a6c507f",
                "7f12e643ee9d1a7f"
            ],
            [
                "fab5901c699f22fc"
            ]
        ]
    },
    {
        "id": "7f12e643ee9d1a7f",
        "type": "debug",
        "z": "3fc007a97f3fcca5",
        "g": "6b11f1b1853e2e50",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 810,
        "y": 120,
        "wires": []
    },
    {
        "id": "8a2a8be6994dadef",
        "type": "catch",
        "z": "3fc007a97f3fcca5",
        "g": "6b11f1b1853e2e50",
        "name": "Catch Call Error",
        "scope": [
            "47540566cb5c3c11",
            "484cdfe1b4c20b15"
        ],
        "uncaught": false,
        "x": 620,
        "y": 320,
        "wires": [
            [
                "99f47b8a43ef7bb3"
            ]
        ]
    },
    {
        "id": "99f47b8a43ef7bb3",
        "type": "debug",
        "z": "3fc007a97f3fcca5",
        "g": "6b11f1b1853e2e50",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 810,
        "y": 320,
        "wires": []
    },
    {
        "id": "484cdfe1b4c20b15",
        "type": "function",
        "z": "3fc007a97f3fcca5",
        "g": "6b11f1b1853e2e50",
        "name": "Function SUB",
        "func": "let response = Number(msg.payload.a) - Number(msg.payload.b);\nmsg.payload = response;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 160,
        "wires": [
            [
                "6665d0fb4870e7bf",
                "5f04824559ad1f86"
            ]
        ]
    },
    {
        "id": "6665d0fb4870e7bf",
        "type": "debug",
        "z": "3fc007a97f3fcca5",
        "g": "6b11f1b1853e2e50",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 810,
        "y": 280,
        "wires": []
    },
    {
        "id": "fab5901c699f22fc",
        "type": "debug",
        "z": "3fc007a97f3fcca5",
        "g": "6b11f1b1853e2e50",
        "name": "Msg Call inside function",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 870,
        "y": 200,
        "wires": []
    },
    {
        "id": "04ad6fa779221d04",
        "type": "moleculer-request-action",
        "z": "3fc007a97f3fcca5",
        "g": "6b11f1b1853e2e50",
        "broker": "15fdc347.1238cd",
        "service": "f36570e8cebef9b3",
        "name": "Math Add",
        "topic": "add",
        "x": 400,
        "y": 120,
        "wires": [
            [
                "47540566cb5c3c11"
            ]
        ]
    },
    {
        "id": "ed3253ebdeeaa87b",
        "type": "moleculer-request-action",
        "z": "3fc007a97f3fcca5",
        "g": "6b11f1b1853e2e50",
        "broker": "15fdc347.1238cd",
        "service": "f36570e8cebef9b3",
        "name": "Math Sub",
        "topic": "sub",
        "x": 400,
        "y": 160,
        "wires": [
            [
                "484cdfe1b4c20b15"
            ]
        ]
    },
    {
        "id": "c67d9c6f9a6c507f",
        "type": "moleculer-response-action",
        "z": "3fc007a97f3fcca5",
        "g": "6b11f1b1853e2e50",
        "name": "",
        "x": 820,
        "y": 160,
        "wires": []
    },
    {
        "id": "5f04824559ad1f86",
        "type": "moleculer-response-action",
        "z": "3fc007a97f3fcca5",
        "g": "6b11f1b1853e2e50",
        "name": "",
        "x": 820,
        "y": 240,
        "wires": []
    },
    {
        "id": "d4c502ae254526bd",
        "type": "debug",
        "z": "3fc007a97f3fcca5",
        "g": "4faf1c149c06ecec",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 910,
        "y": 420,
        "wires": []
    },
    {
        "id": "e25ea02a601577a9",
        "type": "debug",
        "z": "3fc007a97f3fcca5",
        "g": "4faf1c149c06ecec",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 910,
        "y": 460,
        "wires": []
    },
    {
        "id": "9c34c19b0486caf0",
        "type": "moleculer-event",
        "z": "3fc007a97f3fcca5",
        "g": "4faf1c149c06ecec",
        "broker": "15fdc347.1238cd",
        "service": "f36570e8cebef9b3",
        "name": "",
        "topic": "test.emit",
        "group": "",
        "x": 400,
        "y": 420,
        "wires": [
            [
                "d4c502ae254526bd"
            ]
        ]
    },
    {
        "id": "d70c45e646e78d5d",
        "type": "moleculer-event",
        "z": "3fc007a97f3fcca5",
        "g": "4faf1c149c06ecec",
        "broker": "15fdc347.1238cd",
        "service": "f36570e8cebef9b3",
        "name": "",
        "topic": "test.bcast",
        "group": "",
        "x": 400,
        "y": 460,
        "wires": [
            [
                "e25ea02a601577a9"
            ]
        ]
    },
    {
        "id": "851fc21af8ec6155",
        "type": "inject",
        "z": "3fc007a97f3fcca5",
        "g": "be0bca10a2032aab",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "options",
                "v": "{\"meta\":{\"z\":1}}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"a\":2,\"b\":3}",
        "payloadType": "json",
        "x": 430,
        "y": 560,
        "wires": [
            [
                "167db923cc2c8f0c"
            ]
        ]
    },
    {
        "id": "c2db5d2bd7d0babc",
        "type": "debug",
        "z": "3fc007a97f3fcca5",
        "g": "be0bca10a2032aab",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 910,
        "y": 560,
        "wires": []
    },
    {
        "id": "30bc2d47b63b9bb8",
        "type": "inject",
        "z": "3fc007a97f3fcca5",
        "g": "be0bca10a2032aab",
        "name": "Wrong Data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"a\":\"wrong data\",\"b\":3}",
        "payloadType": "json",
        "x": 430,
        "y": 680,
        "wires": [
            [
                "5734ee36fa12ff2b"
            ]
        ]
    },
    {
        "id": "04990d379a0718d2",
        "type": "debug",
        "z": "3fc007a97f3fcca5",
        "g": "be0bca10a2032aab",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 910,
        "y": 600,
        "wires": []
    },
    {
        "id": "3234db09f574863a",
        "type": "catch",
        "z": "3fc007a97f3fcca5",
        "g": "be0bca10a2032aab",
        "name": "",
        "scope": [
            "5734ee36fa12ff2b"
        ],
        "uncaught": false,
        "x": 630,
        "y": 640,
        "wires": [
            [
                "fcdef2416bd9839a"
            ]
        ]
    },
    {
        "id": "0e20bd94f879cf82",
        "type": "inject",
        "z": "3fc007a97f3fcca5",
        "g": "be0bca10a2032aab",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"a\":6,\"b\":3}",
        "payloadType": "json",
        "x": 430,
        "y": 600,
        "wires": [
            [
                "5734ee36fa12ff2b"
            ]
        ]
    },
    {
        "id": "fcdef2416bd9839a",
        "type": "debug",
        "z": "3fc007a97f3fcca5",
        "g": "be0bca10a2032aab",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 890,
        "y": 640,
        "wires": []
    },
    {
        "id": "beaa76e71c7c78fe",
        "type": "inject",
        "z": "3fc007a97f3fcca5",
        "g": "be0bca10a2032aab",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"a\":\"5\",\"b\":3}",
        "payloadType": "json",
        "x": 430,
        "y": 640,
        "wires": [
            [
                "5734ee36fa12ff2b"
            ]
        ]
    },
    {
        "id": "167db923cc2c8f0c",
        "type": "moleculer-call",
        "z": "3fc007a97f3fcca5",
        "g": "be0bca10a2032aab",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "math.add",
        "options": "{}",
        "x": 620,
        "y": 560,
        "wires": [
            [
                "c2db5d2bd7d0babc"
            ]
        ]
    },
    {
        "id": "5734ee36fa12ff2b",
        "type": "moleculer-call",
        "z": "3fc007a97f3fcca5",
        "g": "be0bca10a2032aab",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "math.sub",
        "options": "{}",
        "x": 620,
        "y": 600,
        "wires": [
            [
                "04990d379a0718d2"
            ]
        ]
    },
    {
        "id": "cae14ef9ac65a8da",
        "type": "debug",
        "z": "3ce97bdb992ee0d1",
        "g": "19f8ad37f8ff2b49",
        "name": "nodes",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 180,
        "wires": []
    },
    {
        "id": "f660df79d1995067",
        "type": "debug",
        "z": "3ce97bdb992ee0d1",
        "g": "19f8ad37f8ff2b49",
        "name": "actions",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 340,
        "wires": []
    },
    {
        "id": "500b6bd83ed3f377",
        "type": "inject",
        "z": "3ce97bdb992ee0d1",
        "g": "19f8ad37f8ff2b49",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 330,
        "y": 380,
        "wires": [
            [
                "7caa6331dbda4214"
            ]
        ]
    },
    {
        "id": "17a9e01b532f7589",
        "type": "debug",
        "z": "3ce97bdb992ee0d1",
        "g": "19f8ad37f8ff2b49",
        "name": "events",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 420,
        "wires": []
    },
    {
        "id": "9f2e2eeae77b5396",
        "type": "moleculer-call",
        "z": "3ce97bdb992ee0d1",
        "g": "19f8ad37f8ff2b49",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "$node.list",
        "options": "{\"withServices\":true}",
        "x": 540,
        "y": 220,
        "wires": [
            [
                "cae14ef9ac65a8da",
                "1910ce3303ada697"
            ]
        ]
    },
    {
        "id": "7caa6331dbda4214",
        "type": "moleculer-call",
        "z": "3ce97bdb992ee0d1",
        "g": "19f8ad37f8ff2b49",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "$node.actions",
        "options": "{\"withEndpoints\":true}",
        "x": 560,
        "y": 380,
        "wires": [
            [
                "f660df79d1995067",
                "85a271d6eaf821a5"
            ]
        ]
    },
    {
        "id": "a8d50316a01f1de6",
        "type": "moleculer-call",
        "z": "3ce97bdb992ee0d1",
        "g": "19f8ad37f8ff2b49",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "$node.events",
        "options": "{}",
        "x": 560,
        "y": 420,
        "wires": [
            [
                "17a9e01b532f7589",
                "a8b5360fe703eb72"
            ]
        ]
    },
    {
        "id": "3ff49a028ede6118",
        "type": "comment",
        "z": "3ce97bdb992ee0d1",
        "g": "68bef7fb58b76ec9",
        "name": "https://moleculer.services/docs/0.13/moleculer-repl",
        "info": "",
        "x": 410,
        "y": 100,
        "wires": []
    },
    {
        "id": "d6f94f07e3f02260",
        "type": "moleculer-call",
        "z": "3ce97bdb992ee0d1",
        "g": "19f8ad37f8ff2b49",
        "broker": "15fdc347.1238cd",
        "name": "$node.services",
        "topic": "$node.services",
        "options": "{\"withActions\":true}",
        "x": 560,
        "y": 300,
        "wires": [
            [
                "867d8fe6be26bd87",
                "7cb366c82358ca3b"
            ]
        ]
    },
    {
        "id": "ebb9a0ae70473ace",
        "type": "inject",
        "z": "3ce97bdb992ee0d1",
        "g": "19f8ad37f8ff2b49",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 330,
        "y": 300,
        "wires": [
            [
                "d6f94f07e3f02260"
            ]
        ]
    },
    {
        "id": "867d8fe6be26bd87",
        "type": "function",
        "z": "3ce97bdb992ee0d1",
        "g": "19f8ad37f8ff2b49",
        "name": "Process JSON services",
        "func": "let servicesList = [];\n\nmsg.payload.forEach(service => {\n    servicesList.push({\n        name: service.name || '-',\n        version: service.version || '-',\n        state: 'OK',\n        actions: service.actions ? Object.keys(service.actions).length : 0,\n        events: service.events ? Object.keys(service.events).length : 0,\n        // Exibe o nome de cada nó em uma nova linha\n        nodes: service.nodes ? service.nodes.map(node => `<span style='color: gray;'>${node}</span>`).join('<br>') : 'N/A'\n    });\n});\n\nmsg.payload = servicesList;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 300,
        "wires": [
            [
                "234c1ed64ef9f8ac"
            ]
        ]
    },
    {
        "id": "7cb366c82358ca3b",
        "type": "debug",
        "z": "3ce97bdb992ee0d1",
        "g": "19f8ad37f8ff2b49",
        "name": "services",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 260,
        "wires": []
    },
    {
        "id": "234c1ed64ef9f8ac",
        "type": "ui_template",
        "z": "3ce97bdb992ee0d1",
        "g": "19f8ad37f8ff2b49",
        "group": "ce47d8980738f079",
        "name": "List services",
        "order": 1,
        "width": 20,
        "height": 50,
        "format": "<div style=\"height: 400px; overflow-y: auto; border: 1px solid black;\">\n    <table style=\"width: 100%; border-collapse: collapse;\">\n        <thead style=\"position: sticky; top: 0; background-color: #f1f1f1; z-index: 1;\">\n            <tr>\n                <th style=\"border: 1px solid black; padding: 8px;\">Service</th>\n                <th style=\"border: 1px solid black; padding: 8px;\">Version</th>\n                <th style=\"border: 1px solid black; padding: 8px;\">State</th>\n                <th style=\"border: 1px solid black; padding: 8px;\">Actions</th>\n                <th style=\"border: 1px solid black; padding: 8px;\">Events</th>\n                <th style=\"border: 1px solid black; padding: 8px;\">Nodes</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr ng-repeat=\"service in msg.payload\">\n                <td style=\"border: 1px solid black; padding: 8px;\">{{service.name}}</td>\n                <td style=\"border: 1px solid black; padding: 8px;\">{{service.version}}</td>\n                <td style=\"border: 1px solid black; padding: 8px; text-align: center;\">\n                    <span style=\"background-color: green; color: white; padding: 2px 5px;\">{{service.state}}</span>\n                </td>\n                <td style=\"border: 1px solid black; padding: 8px; text-align: center;\">{{service.actions}}</td>\n                <td style=\"border: 1px solid black; padding: 8px; text-align: center;\">{{service.events}}</td>\n                <td style=\"border: 1px solid black; padding: 8px;\" ng-bind-html=\"service.nodes\"></td>\n            </tr>\n        </tbody>\n    </table>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1050,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "e0bf57e1f7707782",
        "type": "ui_template",
        "z": "3ce97bdb992ee0d1",
        "g": "19f8ad37f8ff2b49",
        "group": "15f331c77a4b5709",
        "name": "List actions",
        "order": 1,
        "width": 20,
        "height": 50,
        "format": "<div style=\"height: 400px; overflow-y: auto; border: 1px solid black;\">\n    <table style=\"width: 100%; border-collapse: collapse;\">\n        <thead style=\"position: sticky; top: 0; background-color: #f1f1f1; z-index: 1;\">\n            <tr>\n                <th style=\"border: 1px solid black; padding: 8px;\">Action</th>\n                <th style=\"border: 1px solid black; padding: 8px;\">Nodes</th>\n                <th style=\"border: 1px solid black; padding: 8px;\">State</th>\n                <th style=\"border: 1px solid black; padding: 8px;\">Cached</th>\n                <th style=\"border: 1px solid black; padding: 8px;\">Params</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr ng-repeat=\"action in msg.payload\">\n                <td style=\"border: 1px solid black; padding: 8px;\">{{action.name}}</td>\n                <td style=\"border: 1px solid black; padding: 8px;\" ng-bind-html=\"action.nodes\"></td>\n                <td style=\"border: 1px solid black; padding: 8px; text-align: center;\">\n                    <span style=\"background-color: green; color: white; padding: 2px 5px;\" ng-if=\"action.state === 'OK'\">{{action.state}}</span>\n                    <span style=\"background-color: red; color: white; padding: 2px 5px;\" ng-if=\"action.state !== 'OK'\">{{action.state}}</span>\n                </td>\n                <td style=\"border: 1px solid black; padding: 8px; text-align: center;\">{{action.cached}}</td>\n                <td style=\"border: 1px solid black; padding: 8px;\">{{action.params}}</td>\n            </tr>\n        </tbody>\n    </table>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1050,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "85a271d6eaf821a5",
        "type": "function",
        "z": "3ce97bdb992ee0d1",
        "g": "19f8ad37f8ff2b49",
        "name": "Process JSON actions",
        "func": "let actionsList = [];\n\nmsg.payload.forEach(action => {\n    actionsList.push({\n        name: action.name || '-',\n        nodes: action.count ? `<span style=\"color: gray;\">(*) ${action.count} <br>${action.hasLocal ? '<local>' : ''} ${action.nodes ? action.nodes.join('<br>') : ''}</span>` : 'N/A',\n        state: action.available ? 'OK' : 'OFFLINE',\n        cached: action.action.cache ? 'Yes' : 'No',\n        params: action.action.params ? Object.keys(action.action.params).join(', ') : 'N/A'\n    });\n});\n\nmsg.payload = actionsList;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 380,
        "wires": [
            [
                "e0bf57e1f7707782"
            ]
        ]
    },
    {
        "id": "d7df2f191c0b0f8c",
        "type": "inject",
        "z": "3ce97bdb992ee0d1",
        "g": "19f8ad37f8ff2b49",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 330,
        "y": 220,
        "wires": [
            [
                "9f2e2eeae77b5396"
            ]
        ]
    },
    {
        "id": "1910ce3303ada697",
        "type": "function",
        "z": "3ce97bdb992ee0d1",
        "g": "19f8ad37f8ff2b49",
        "name": "Process JSON nodes",
        "func": "let nodesList = [];\n\nmsg.payload.forEach(node => {\n    nodesList.push({\n        id: node.id || '-',\n        available: node.available ? 'OK' : 'OFFLINE',\n        local: node.local ? 'Yes' : 'No',\n        lastHeartbeat: new Date(node.lastHeartbeatTime).toLocaleString(),\n        cpu: `${node.cpu}%`,\n        ipList: node.ipList ? node.ipList.join('<br>') : 'N/A',\n        langVersion: node.client.langVersion || 'N/A'\n    });\n});\n\nmsg.payload = nodesList;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 220,
        "wires": [
            [
                "bd5fb22cb52eb398"
            ]
        ]
    },
    {
        "id": "bd5fb22cb52eb398",
        "type": "ui_template",
        "z": "3ce97bdb992ee0d1",
        "g": "19f8ad37f8ff2b49",
        "group": "36a8ea7d81551bea",
        "name": "List nodes",
        "order": 1,
        "width": 20,
        "height": 50,
        "format": "<div style=\"height: 400px; overflow-y: auto; border: 1px solid black;\">\n    <table style=\"width: 100%; border-collapse: collapse;\">\n        <thead style=\"position: sticky; top: 0; background-color: #f1f1f1; z-index: 1;\">\n            <tr>\n                <th style=\"border: 1px solid black; padding: 8px;\">ID</th>\n                <th style=\"border: 1px solid black; padding: 8px;\">Available</th>\n                <th style=\"border: 1px solid black; padding: 8px;\">Local</th>\n                <th style=\"border: 1px solid black; padding: 8px;\">Last Heartbeat</th>\n                <th style=\"border: 1px solid black; padding: 8px;\">CPU</th>\n                <th style=\"border: 1px solid black; padding: 8px;\">IP List</th>\n                <th style=\"border: 1px solid black; padding: 8px;\">Lang Version</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr ng-repeat=\"node in msg.payload\">\n                <td style=\"border: 1px solid black; padding: 8px;\">{{node.id}}</td>\n                <td style=\"border: 1px solid black; padding: 8px; text-align: center;\">\n                    <span style=\"background-color: green; color: white; padding: 2px 5px;\" ng-if=\"node.available === 'OK'\">{{node.available}}</span>\n                    <span style=\"background-color: red; color: white; padding: 2px 5px;\" ng-if=\"node.available !== 'OK'\">{{node.available}}</span>\n                </td>\n                <td style=\"border: 1px solid black; padding: 8px; text-align: center;\">{{node.local}}</td>\n                <td style=\"border: 1px solid black; padding: 8px; text-align: center;\">{{node.lastHeartbeat}}</td>\n                <td style=\"border: 1px solid black; padding: 8px; text-align: center;\">{{node.cpu}}</td>\n                <td style=\"border: 1px solid black; padding: 8px;\" ng-bind-html=\"node.ipList\"></td>\n                <td style=\"border: 1px solid black; padding: 8px;\">{{node.langVersion}}</td>\n            </tr>\n        </tbody>\n    </table>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1050,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "f27292c429afa813",
        "type": "inject",
        "z": "3ce97bdb992ee0d1",
        "g": "19f8ad37f8ff2b49",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 330,
        "y": 420,
        "wires": [
            [
                "a8d50316a01f1de6"
            ]
        ]
    },
    {
        "id": "a8b5360fe703eb72",
        "type": "function",
        "z": "3ce97bdb992ee0d1",
        "g": "19f8ad37f8ff2b49",
        "name": "Process JSON events",
        "func": "let eventsList = []; // Declara a lista de eventos\n\nmsg.payload.forEach(event => {\n    eventsList.push({\n        name: event.name || '-',\n        group: event.group || '-',\n        state: event.available ? 'OK' : 'OFFLINE', // Verifica o estado de disponibilidade\n        nodes: event.count ? `<span style=\"color: gray;\">(*) ${event.count} <br>${event.hasLocal ? '<local>' : ''}</span>` : 'N/A'\n    });\n});\n\nmsg.payload = eventsList;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 460,
        "wires": [
            [
                "08b970c9bde71121"
            ]
        ]
    },
    {
        "id": "08b970c9bde71121",
        "type": "ui_template",
        "z": "3ce97bdb992ee0d1",
        "g": "19f8ad37f8ff2b49",
        "group": "385a92c78470521d",
        "name": "List events",
        "order": 1,
        "width": 20,
        "height": 50,
        "format": "<div style=\"height: 400px; overflow-y: auto; border: 1px solid black;\">\n    <table style=\"width: 100%; border-collapse: collapse;\">\n        <thead style=\"position: sticky; top: 0; background-color: #f1f1f1; z-index: 1;\">\n            <tr>\n                <th style=\"border: 1px solid black; padding: 8px;\">Event</th>\n                <th style=\"border: 1px solid black; padding: 8px;\">Group</th>\n                <th style=\"border: 1px solid black; padding: 8px;\">State</th>\n                <th style=\"border: 1px solid black; padding: 8px;\">Nodes</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr ng-repeat=\"event in msg.payload\">\n                <td style=\"border: 1px solid black; padding: 8px;\">{{event.name}}</td>\n                <td style=\"border: 1px solid black; padding: 8px;\">{{event.group}}</td>\n                <td style=\"border: 1px solid black; padding: 8px; text-align: center;\">\n                    <span style=\"background-color: green; color: white; padding: 2px 5px;\" ng-if=\"event.state === 'OK'\">OK</span>\n                    <span style=\"background-color: red; color: white; padding: 2px 5px;\" ng-if=\"event.state !== 'OK'\">OFFLINE</span>\n                </td>\n                <td style=\"border: 1px solid black; padding: 8px;\" ng-bind-html=\"event.nodes\"></td>\n            </tr>\n        </tbody>\n    </table>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1050,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "e811bcd50da24aba",
        "type": "comment",
        "z": "3ce97bdb992ee0d1",
        "g": "19f8ad37f8ff2b49",
        "name": "Descoberta dos serviços conectados ao transporter.",
        "info": "",
        "x": 450,
        "y": 160,
        "wires": []
    },
    {
        "id": "fb5c943a23e8354e",
        "type": "moleculer-call",
        "z": "8eea00dd0fa2793b",
        "g": "6f56f9087cf1a1b5",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "pic118_pid4.aas",
        "options": "{}",
        "x": 540,
        "y": 195.00000381469727,
        "wires": [
            [
                "c8b94782db37271a",
                "c94fb7e3b0ec6e81"
            ]
        ]
    },
    {
        "id": "f0a86febe68d9bc3",
        "type": "debug",
        "z": "8eea00dd0fa2793b",
        "g": "6f56f9087cf1a1b5",
        "name": "debug 33",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 759.0000076293945,
        "y": 525.0000400543213,
        "wires": []
    },
    {
        "id": "d154db2cbc340fde",
        "type": "inject",
        "z": "8eea00dd0fa2793b",
        "g": "6f56f9087cf1a1b5",
        "name": "SE Percentage",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"idShortSubmodel\":\"OperationalData\",\"idShortSubmodelElement\":\"Percentage\",\"format\":\"value\"}",
        "payloadType": "json",
        "x": 140,
        "y": 60,
        "wires": [
            [
                "6bddc488dd19a449"
            ]
        ]
    },
    {
        "id": "ba7a51fc4d917b06",
        "type": "function",
        "z": "8eea00dd0fa2793b",
        "g": "6f56f9087cf1a1b5",
        "name": "flow lit125_daq",
        "func": "// Converter o valor de msg.payload para número (float)\nvar numericValue = parseFloat(msg.payload);\n\n// Armazenar a variável global como número\nflow.set(\"lit125_daq\", numericValue);\nmsg.payload = numericValue\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 60,
        "wires": [
            [
                "c9c13b4522f689e9"
            ]
        ]
    },
    {
        "id": "54d04bd92aeac6c8",
        "type": "function",
        "z": "8eea00dd0fa2793b",
        "g": "6f56f9087cf1a1b5",
        "name": "function 1",
        "func": "// get the value of the flow variable \"pit118_daq\"\nvar ti = flow.get(\"Ti_3\"); \nvar td = flow.get(\"Td_3\");\nvar kp = flow.get(\"Kp_3\");\nvar pv = flow.get(\"lit125_daq\");\nvar setpoint = flow.get (\"setpoint\");\nvar error = flow.get(\"Error\");\nvar integrative = 0.24;\nvar manipulatedVariable = flow.get(\"ManipulateVariable\")\nvar time = flow.get(\"time\");\n\nmsg.payload = {\n    \"idShortSubmodel\": \"OperationalData\",\n    \"idShortSubmodelElement\": \"Parameters\",\n    \"value\": {\n        \"ti\": ti,\n        \"td\": td,\n        \"kp\": kp,\n        \"pv\": pv,  // Value retrieved from the flow variable\n        \"setpoint\": setpoint,\n        \"error\": error,\n        \"integrative\": integrative,\n        \"manipulatedVariable\": manipulatedVariable,\n        \"time\": time\n    }\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 195.00000381469727,
        "wires": [
            [
                "fb5c943a23e8354e"
            ]
        ]
    },
    {
        "id": "3f32d1c58d9c9378",
        "type": "inject",
        "z": "8eea00dd0fa2793b",
        "g": "6f56f9087cf1a1b5",
        "name": "SE Parameters",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 195.00000381469727,
        "wires": [
            [
                "54d04bd92aeac6c8"
            ]
        ]
    },
    {
        "id": "5024b14450204201",
        "type": "moleculer-call",
        "z": "8eea00dd0fa2793b",
        "d": true,
        "g": "6f56f9087cf1a1b5",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "pic118_pid4.aas",
        "options": "{}",
        "x": 325,
        "y": 383.0000705718994,
        "wires": [
            [
                "9aff67c8013abfbd",
                "7ae50a58405ea1de"
            ]
        ]
    },
    {
        "id": "a631b5ba7ad5a942",
        "type": "inject",
        "z": "8eea00dd0fa2793b",
        "d": true,
        "g": "6f56f9087cf1a1b5",
        "name": "SE Payload read",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"idShortSubmodel\":\"OperationalData\",\"idShortSubmodelElement\":\"Payload\",\"format\":\"value\"}",
        "payloadType": "json",
        "x": 135,
        "y": 383.0000705718994,
        "wires": [
            [
                "5024b14450204201"
            ]
        ]
    },
    {
        "id": "9aff67c8013abfbd",
        "type": "function",
        "z": "8eea00dd0fa2793b",
        "d": true,
        "g": "6f56f9087cf1a1b5",
        "name": "Global p2_daq_value",
        "func": "// Armazenar a variável global como número\nflow.set(\"ManipulateVariable\", msg.payload.mv);\nflow.set(\"Error\", msg.payload.error)\nflow.set(\"time\", msg.payload.time)\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 545,
        "y": 383.0000705718994,
        "wires": [
            [
                "69c03b949b04ba43"
            ]
        ]
    },
    {
        "id": "f895b68b9e2b89a5",
        "type": "function",
        "z": "8eea00dd0fa2793b",
        "g": "6f56f9087cf1a1b5",
        "name": "function 2",
        "func": "// get the value of the global variable \"p2_value\"\nvar p2_value = flow.get(\"ManipulateVariable\");\n\n// Verificar se a variável global está definida\nif (typeof p2_value !== 'undefined') {\n    // Atribuir o valor da variável global ao campo 'pv' do JSON\n    msg.payload = {\n        \"idShortSubmodel\": \"OperationalData\",\n        \"idShortSubmodelElement\": \"Percentage\",\n        \"value\": p2_value\n    };\n} else {\n    // Caso a variável global não exista, mostrar uma mensagem no debug\n    node.warn(\"Variável p2_value não definida\");\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 339.00000762939453,
        "y": 525.0000400543213,
        "wires": [
            [
                "ba24770f75a3afe5"
            ]
        ]
    },
    {
        "id": "8d8cd546e73af20a",
        "type": "inject",
        "z": "8eea00dd0fa2793b",
        "g": "6f56f9087cf1a1b5",
        "name": "SE Parameters",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 139.00000762939453,
        "y": 525.0000400543213,
        "wires": [
            [
                "f895b68b9e2b89a5"
            ]
        ]
    },
    {
        "id": "ba24770f75a3afe5",
        "type": "moleculer-call",
        "z": "8eea00dd0fa2793b",
        "g": "6f56f9087cf1a1b5",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "p2_daq.aas",
        "options": "{}",
        "x": 529.0000076293945,
        "y": 525.0000400543213,
        "wires": [
            [
                "f0a86febe68d9bc3"
            ]
        ]
    },
    {
        "id": "6bddc488dd19a449",
        "type": "moleculer-call",
        "z": "8eea00dd0fa2793b",
        "g": "6f56f9087cf1a1b5",
        "broker": "15fdc347.1238cd",
        "name": "",
        "topic": "lit125_daq.aas",
        "options": "{}",
        "x": 320,
        "y": 60,
        "wires": [
            [
                "ba7a51fc4d917b06"
            ]
        ]
    },
    {
        "id": "c9c13b4522f689e9",
        "type": "ui_gauge",
        "z": "8eea00dd0fa2793b",
        "g": "6f56f9087cf1a1b5",
        "name": "",
        "group": "98c8642c17167e6f",
        "order": 1,
        "width": 9,
        "height": 8,
        "gtype": "compass",
        "title": "LIT 125",
        "label": "%",
        "format": "{{payload}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 720,
        "y": 60,
        "wires": []
    },
    {
        "id": "9af471ff89013c16",
        "type": "ui_numeric",
        "z": "8eea00dd0fa2793b",
        "g": "aa24a92a6758c6c8",
        "name": "",
        "label": "Kp",
        "tooltip": "",
        "group": "98c8642c17167e6f",
        "order": 6,
        "width": 3,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "30",
        "step": "0.1",
        "className": "",
        "x": 1210,
        "y": 440,
        "wires": [
            [
                "94483afb98e37c30"
            ]
        ]
    },
    {
        "id": "94483afb98e37c30",
        "type": "function",
        "z": "8eea00dd0fa2793b",
        "g": "aa24a92a6758c6c8",
        "name": "Kp",
        "func": "flow.set(\"Kp_3\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "675d4cbafafbdfee",
        "type": "ui_numeric",
        "z": "8eea00dd0fa2793b",
        "g": "aa24a92a6758c6c8",
        "name": "",
        "label": "Td",
        "tooltip": "",
        "group": "98c8642c17167e6f",
        "order": 9,
        "width": 3,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "30",
        "step": "0.1",
        "className": "",
        "x": 1210,
        "y": 500,
        "wires": [
            [
                "2297e8ccac2fb805"
            ]
        ]
    },
    {
        "id": "2297e8ccac2fb805",
        "type": "function",
        "z": "8eea00dd0fa2793b",
        "g": "aa24a92a6758c6c8",
        "name": "Td",
        "func": "flow.set(\"Td_3\", msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "e4a25d21496e6892",
        "type": "function",
        "z": "8eea00dd0fa2793b",
        "g": "aa24a92a6758c6c8",
        "name": "Ti",
        "func": "flow.set(\"Ti_3\", msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "902bd9bc82e80c13",
        "type": "ui_numeric",
        "z": "8eea00dd0fa2793b",
        "g": "aa24a92a6758c6c8",
        "name": "",
        "label": "Ti",
        "tooltip": "",
        "group": "98c8642c17167e6f",
        "order": 12,
        "width": 3,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "className": "",
        "x": 1210,
        "y": 560,
        "wires": [
            [
                "e4a25d21496e6892"
            ]
        ]
    },
    {
        "id": "8ec628c0e7a707f7",
        "type": "ui_text",
        "z": "8eea00dd0fa2793b",
        "g": "aa24a92a6758c6c8",
        "group": "98c8642c17167e6f",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Select Pid 4.0 Paramas",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1290,
        "y": 400,
        "wires": []
    },
    {
        "id": "888f9b8468e520ec",
        "type": "ui_button",
        "z": "8eea00dd0fa2793b",
        "g": "aa24a92a6758c6c8",
        "name": "",
        "group": "98c8642c17167e6f",
        "order": 5,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Kp Standart",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1.2",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 1030,
        "y": 440,
        "wires": [
            [
                "9af471ff89013c16"
            ]
        ]
    },
    {
        "id": "2c8c48ef5c1b3659",
        "type": "ui_button",
        "z": "8eea00dd0fa2793b",
        "g": "aa24a92a6758c6c8",
        "name": "",
        "group": "98c8642c17167e6f",
        "order": 8,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Td Standart",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 1030,
        "y": 500,
        "wires": [
            [
                "675d4cbafafbdfee"
            ]
        ]
    },
    {
        "id": "8abad0d17b7213d7",
        "type": "ui_button",
        "z": "8eea00dd0fa2793b",
        "g": "aa24a92a6758c6c8",
        "name": "",
        "group": "98c8642c17167e6f",
        "order": 11,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Ti Standart",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1.5",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 1030,
        "y": 560,
        "wires": [
            [
                "902bd9bc82e80c13"
            ]
        ]
    },
    {
        "id": "c8b94782db37271a",
        "type": "function",
        "z": "8eea00dd0fa2793b",
        "g": "6f56f9087cf1a1b5",
        "name": "Read Pid params",
        "func": "// Armazenar a variável global como número\n\nflow.set(\"ti\", msg.payload.ti)\nflow.set(\"Kp\", msg.payload.kp)\nflow.set(\"td\", msg.payload.td)\n// flow.set(\"ProcessVariable\", msg.payload.pv)\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 195.00000381469727,
        "wires": [
            []
        ]
    },
    {
        "id": "17d46ea8a53f3008",
        "type": "function",
        "z": "8eea00dd0fa2793b",
        "g": "9f76b990d804ca9b",
        "name": "Sinus wave - Generator",
        "func": "//Sine wave function calculation\nvar x = flow.get(\"My_arc001\") + ((Math.PI * 2)/300); // ===300 points (seconds) in the arc\nflow.set(\"My_arc001\", x)\nvar SinGen = Math.sin(x);  // === It varies from +1 to -1\nif (flow.get(\"My_arc001\") >= (Math.PI * 2)) { flow.set(\"My_arc001\", 0.0) };\n\n//Scaling [ Y-Y0 = m.(X-X0) ]\nvar VoutMax = 55;\nvar VoutMin = 15;\nvar AngCoef = 2 / (VoutMax - VoutMin);\nvar Vout = ((SinGen+1)/AngCoef) + VoutMin ;\n\n//var Vout = SinGen;\n\n//flow Var Level Setpoint definition\nflow.set(\"SinusSetpoint\", Vout);\nmsg.payload = Vout;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "//O código adicionado aqui será executado uma vez\n// sempre que o nó for iniciado.\n\nflow.set(\"My_arc001\", 0.0); //Varies the number from 0 to Pi*2 (in rad mode)",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 60,
        "wires": [
            [
                "efcb59192edf7523"
            ]
        ]
    },
    {
        "id": "efcb59192edf7523",
        "type": "function",
        "z": "8eea00dd0fa2793b",
        "g": "9f76b990d804ca9b",
        "name": "Ctrl.Loop3.setpoint",
        "func": "flow.set(\"setpoint\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1770,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "4e5d78eecb8ebc9d",
        "type": "inject",
        "z": "8eea00dd0fa2793b",
        "g": "9f76b990d804ca9b",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.25",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "select_setpoint_03",
        "payloadType": "flow",
        "x": 1050,
        "y": 100,
        "wires": [
            [
                "feaa78b792d51b52"
            ]
        ]
    },
    {
        "id": "f60bbda1732c1c55",
        "type": "function",
        "z": "8eea00dd0fa2793b",
        "g": "9f76b990d804ca9b",
        "name": "select_setpoint_Line_pressure",
        "func": "flow.set(\"select_setpoint_03\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "feaa78b792d51b52",
        "type": "switch",
        "z": "8eea00dd0fa2793b",
        "g": "9f76b990d804ca9b",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1270,
        "y": 100,
        "wires": [
            [
                "17d46ea8a53f3008"
            ],
            [
                "0d7ff3a69093087d"
            ],
            [
                "51035a85e0f72f29"
            ]
        ]
    },
    {
        "id": "51035a85e0f72f29",
        "type": "function",
        "z": "8eea00dd0fa2793b",
        "g": "9f76b990d804ca9b",
        "name": "Triangle wave - Generator   .",
        "func": "//Triangle wave function calculation\nvar VoutMin = 10;\nvar VoutMax = 55;\n// coef > 1, wave more steep\n// coef = 1, wave in 45 degrees\n// coef < 1, wave less steep\nvar coef = 0.20\nvar Vout = flow.get(\"tri\") + (flow.get(\"signal\")* coef);\nflow.set(\"tri\", Vout);\n\n//Definition if it count up or counts down\nif (Vout <= VoutMin) { flow.set(\"signal\", 1);}\n                else { ; }\nif (Vout >= VoutMax) { flow.set(\"signal\",-1);}\n                else { ; }              \n\nflow.set(\"TriangleSetpoint\", Vout);\nmsg.payload = Vout;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "//O código adicionado aqui será executado uma vez\n// sempre que o nó for iniciado.\nvar VoutMin = 10;\nflow.set(\"tri\",VoutMin);\nflow.set(\"signal\", 1);",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 140,
        "wires": [
            [
                "efcb59192edf7523"
            ]
        ]
    },
    {
        "id": "92f9819e474698c1",
        "type": "ui_text",
        "z": "8eea00dd0fa2793b",
        "g": "9f76b990d804ca9b",
        "group": "98c8642c17167e6f",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Select setpoint",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1040,
        "y": 240,
        "wires": []
    },
    {
        "id": "24783e411c88216f",
        "type": "ui_dropdown",
        "z": "8eea00dd0fa2793b",
        "g": "9f76b990d804ca9b",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select Setpoint",
        "group": "98c8642c17167e6f",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Sinus Setpoint",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Fixed Setpoint",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Triangle Setpoint",
                "value": 3,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1020,
        "y": 280,
        "wires": [
            [
                "f60bbda1732c1c55"
            ]
        ]
    },
    {
        "id": "0d7ff3a69093087d",
        "type": "function",
        "z": "8eea00dd0fa2793b",
        "g": "9f76b990d804ca9b",
        "name": "Fixed setpoint",
        "func": "var setpoint = 50;\nmsg.payload = setpoint;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "//O código adicionado aqui será executado uma vez\n// sempre que o nó for iniciado.\nvar VoutMin = 10;\nflow.set(\"tri\",VoutMin);\nflow.set(\"signal\", 1);",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 100,
        "wires": [
            [
                "efcb59192edf7523"
            ]
        ]
    },
    {
        "id": "c68b94e525a9d098",
        "type": "ui_chart",
        "z": "8eea00dd0fa2793b",
        "g": "34ce1b46adb0680a",
        "name": "",
        "group": "e2420902282f4f2e",
        "order": 1,
        "width": 10,
        "height": 7,
        "label": "SetPoint x Process variable",
        "chartType": "line",
        "legend": "true",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#00ff4c",
            "#00d5ff",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 720,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "e859839789f9975b",
        "type": "inject",
        "z": "8eea00dd0fa2793b",
        "g": "34ce1b46adb0680a",
        "name": "One second cyclical request",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 740,
        "wires": [
            [
                "afb72ddee9ba6a43",
                "ad978dbb9812f74e",
                "879a0a66ec499f87",
                "3628cf7bbaff09e5",
                "9d736c89ce03fbd1"
            ]
        ]
    },
    {
        "id": "8aec4fc837c3b5bd",
        "type": "ui_chart",
        "z": "8eea00dd0fa2793b",
        "g": "34ce1b46adb0680a",
        "name": "",
        "group": "e2420902282f4f2e",
        "order": 2,
        "width": 10,
        "height": 7,
        "label": "Manipulated variable",
        "chartType": "line",
        "legend": "true",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-20",
        "ymax": "100",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#fbff00",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 700,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "677ef9ee7c213668",
        "type": "ui_text",
        "z": "8eea00dd0fa2793b",
        "g": "34ce1b46adb0680a",
        "group": "98c8642c17167e6f",
        "order": 10,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Td",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": true,
        "font": "Times New Roman,Times,serif",
        "fontSize": "20",
        "color": "#469daf",
        "x": 650,
        "y": 640,
        "wires": []
    },
    {
        "id": "4dd4ca19d01b55c6",
        "type": "ui_text",
        "z": "8eea00dd0fa2793b",
        "g": "34ce1b46adb0680a",
        "group": "98c8642c17167e6f",
        "order": 7,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "kp",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "20",
        "color": "#469daf",
        "x": 650,
        "y": 680,
        "wires": []
    },
    {
        "id": "f1c17e03b333dcc0",
        "type": "ui_text",
        "z": "8eea00dd0fa2793b",
        "g": "34ce1b46adb0680a",
        "group": "98c8642c17167e6f",
        "order": 13,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Ti",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "20",
        "color": "#469daf",
        "x": 650,
        "y": 720,
        "wires": []
    },
    {
        "id": "afb72ddee9ba6a43",
        "type": "function",
        "z": "8eea00dd0fa2793b",
        "g": "34ce1b46adb0680a",
        "name": "Read pid params",
        "func": "// Recuperar as variáveis globais\nvar ti = flow.get(\"ti\");\nvar kp = flow.get(\"Kp\");\nvar td = flow.get(\"td\");\n\n// Criar mensagens para cada saída\nvar msg1 = { payload: td };\nvar msg2 = { payload: kp };\nvar msg3 = { payload: ti };\n\n\n// Retornar as mensagens para as respectivas saídas\nreturn [msg1, msg2, msg3];",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 680,
        "wires": [
            [
                "677ef9ee7c213668"
            ],
            [
                "4dd4ca19d01b55c6"
            ],
            [
                "f1c17e03b333dcc0"
            ]
        ]
    },
    {
        "id": "ad978dbb9812f74e",
        "type": "function",
        "z": "8eea00dd0fa2793b",
        "g": "34ce1b46adb0680a",
        "name": "setpoint",
        "func": "// Recuperar as variáveis globais\nvar setpoint = flow.get(\"setpoint\")\nmsg.payload = setpoint;\nmsg.topic = \"setpoint\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 760,
        "wires": [
            [
                "c68b94e525a9d098"
            ]
        ]
    },
    {
        "id": "879a0a66ec499f87",
        "type": "function",
        "z": "8eea00dd0fa2793b",
        "g": "34ce1b46adb0680a",
        "name": "ProcessVariable",
        "func": "// Recuperar as variáveis globais\nvar pv = flow.get(\"lit125_daq\")\nmsg.payload = pv;\nmsg.topic = \"Process Variable\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 800,
        "wires": [
            [
                "c68b94e525a9d098"
            ]
        ]
    },
    {
        "id": "3628cf7bbaff09e5",
        "type": "function",
        "z": "8eea00dd0fa2793b",
        "g": "34ce1b46adb0680a",
        "name": "ManipulateVariable",
        "func": "// Recuperar as variáveis globais\nvar mv = flow.get(\"ManipulateVariable\")\nmsg.payload = mv;\nmsg.topic = \"Manipulate Variable\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 880,
        "wires": [
            [
                "8aec4fc837c3b5bd"
            ]
        ]
    },
    {
        "id": "9d736c89ce03fbd1",
        "type": "function",
        "z": "8eea00dd0fa2793b",
        "g": "34ce1b46adb0680a",
        "name": "Error",
        "func": "// Recuperar as variáveis globais\nvar error = flow.get(\"Error\")\nmsg.payload = error;\nmsg.topic = \"Error\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 840,
        "wires": [
            [
                "8aec4fc837c3b5bd"
            ]
        ]
    },
    {
        "id": "a320fd7386c19133",
        "type": "ui_button",
        "z": "8eea00dd0fa2793b",
        "g": "ea0a439a14de4e21",
        "name": "",
        "group": "0dd7e1bf0b208734",
        "order": 15,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "Button_ON",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 1010,
        "y": 680,
        "wires": [
            [
                "98de96735694b4a4",
                "97c350c6ab2ed54c",
                "6536a6c55a7b3b68"
            ]
        ]
    },
    {
        "id": "2a62f516ddf26e20",
        "type": "ui_button",
        "z": "8eea00dd0fa2793b",
        "g": "ea0a439a14de4e21",
        "name": "",
        "group": "0dd7e1bf0b208734",
        "order": 16,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "className": "Button_OFF",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 1010,
        "y": 720,
        "wires": [
            [
                "98de96735694b4a4",
                "97c350c6ab2ed54c",
                "6536a6c55a7b3b68"
            ]
        ]
    },
    {
        "id": "5a405f64f9b6c700",
        "type": "ui_switch",
        "z": "8eea00dd0fa2793b",
        "g": "ea0a439a14de4e21",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "0dd7e1bf0b208734",
        "order": 14,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "send",
        "oncolor": "green",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "red",
        "animate": false,
        "className": "switch",
        "x": 1390,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "97c350c6ab2ed54c",
        "type": "function",
        "z": "8eea00dd0fa2793b",
        "g": "ea0a439a14de4e21",
        "name": "Flow Eneable",
        "func": "   if(global.get(\"M2\") == 1 || global.get(\"M1\") == 1){\n      flow.set(\"Eneable\",0) \n      msg.payload = \"desativado por outra malha\"\n      return msg;\n   }\n   else{\n      if  (msg.payload === true) {\n         flow.set(\"Eneable\", 1)\n         global.set(\"M3\", 1)\n         msg.payload = \"acionado\"\n         return msg;\n\n      } else {\n         flow.set(\"Eneable\", 0)\n         global.set(\"M3\", 0)\n         msg.payload = \"desativado\"\n         return msg;\n      }\n   }",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 740,
        "wires": [
            [
                "805f396c41ecd1dc"
            ]
        ]
    },
    {
        "id": "98de96735694b4a4",
        "type": "function",
        "z": "8eea00dd0fa2793b",
        "g": "ea0a439a14de4e21",
        "name": "Enable OFF",
        "func": "for (let i = 0; i < 3; i++) {\n    if (msg.payload === false) {\n        msg.enable = 1;\n    } else {\n        msg.enable = 0;\n    }\n    \n    msg.mv = 0;\n    node.send(msg); // Envie a mensagem no final de cada iteração\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 700,
        "wires": [
            [
                "bbc4eeb68eee6e72"
            ]
        ]
    },
    {
        "id": "bbc4eeb68eee6e72",
        "type": "moleculer-DAQ_AO_U_WT",
        "z": "8eea00dd0fa2793b",
        "d": true,
        "g": "ea0a439a14de4e21",
        "broker": "63ebd62b2640f3f7",
        "name": "Pump 2",
        "topic": "",
        "options": "{}",
        "ident": "5",
        "out": "Channel_2",
        "stack": "0",
        "x": 1480,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "805f396c41ecd1dc",
        "type": "debug",
        "z": "8eea00dd0fa2793b",
        "g": "ea0a439a14de4e21",
        "name": "Line pressure",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1480,
        "y": 740,
        "wires": []
    },
    {
        "id": "36cefa60a487ba4c",
        "type": "inject",
        "z": "8eea00dd0fa2793b",
        "g": "ea0a439a14de4e21",
        "name": "Trigger [enable]",
        "props": [
            {
                "p": "enable",
                "v": "Eneable",
                "vt": "flow"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "x": 1030,
        "y": 780,
        "wires": [
            [
                "587ebdfbc6b89f79"
            ]
        ]
    },
    {
        "id": "587ebdfbc6b89f79",
        "type": "function",
        "z": "8eea00dd0fa2793b",
        "g": "ea0a439a14de4e21",
        "name": "",
        "func": " if(msg.enable == 1){\n   msg.payload = true\n   return msg;\n }else{\n    msg.payload = false\n    return msg;\n }",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 780,
        "wires": [
            [
                "5a405f64f9b6c700"
            ]
        ]
    },
    {
        "id": "6536a6c55a7b3b68",
        "type": "function",
        "z": "8eea00dd0fa2793b",
        "g": "ea0a439a14de4e21",
        "name": "Enable electro valve",
        "func": "for (let i = 0; i < 3; i++) {\n    if (msg.payload === true) {\n        msg.enable = 1;\n        msg.mv = 30;\n    } else {\n        msg.enable = 0;\n        msg.mv = 100;\n    }\n    \n   \n    node.send(msg); // Envie a mensagem no final de cada iteração\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 660,
        "wires": [
            [
                "b2da2d6e1d162aa1"
            ]
        ]
    },
    {
        "id": "b2da2d6e1d162aa1",
        "type": "moleculer-DAQ_AO_U_WT",
        "z": "8eea00dd0fa2793b",
        "d": true,
        "g": "ea0a439a14de4e21",
        "broker": "63ebd62b2640f3f7",
        "name": "Electro valve",
        "topic": "",
        "options": "{}",
        "ident": "5",
        "out": "Channel_3",
        "stack": "0",
        "x": 1490,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "69c03b949b04ba43",
        "type": "debug",
        "z": "8eea00dd0fa2793b",
        "d": true,
        "g": "6f56f9087cf1a1b5",
        "name": "debug 37",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 748,
        "y": 389.00006675720215,
        "wires": []
    },
    {
        "id": "c94fb7e3b0ec6e81",
        "type": "debug",
        "z": "8eea00dd0fa2793b",
        "g": "6f56f9087cf1a1b5",
        "name": "debug 39",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 260,
        "wires": []
    },
    {
        "id": "67be43b013f3ef97",
        "type": "comment",
        "z": "8eea00dd0fa2793b",
        "g": "6f56f9087cf1a1b5",
        "name": "tentar chamar outros controles",
        "info": "",
        "x": 120,
        "y": 160,
        "wires": []
    },
    {
        "id": "5bdc100f60799609",
        "type": "inject",
        "z": "8eea00dd0fa2793b",
        "g": "6f56f9087cf1a1b5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "7ecf73fb1a297fa2"
            ]
        ]
    },
    {
        "id": "7ecf73fb1a297fa2",
        "type": "function",
        "z": "8eea00dd0fa2793b",
        "g": "6f56f9087cf1a1b5",
        "name": "Inicializa variavel como zero",
        "func": "// Verificar se msg.payload é um número válido\nif (msg.payload === true) {\n    // Se for undefined, null ou não for um número, definir Kp_3 como 0\n    flow.set(\"Ti_3\", 0);\n    flow.set(\"Td_3\", 0);\n    flow.set(\"Kp_3\", 0);\n    flow.set(\"pv\", 0);\n    flow.set(\"setpoint\", 0);\n    flow.set(\"Error\", 0);\n    flow.set(\"integrative\", 0)\n    flow.set(\"ManipulateVariable\", 0);\n    flow.set(\"time\", 0);\n} \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "7ae50a58405ea1de",
        "type": "debug",
        "z": "8eea00dd0fa2793b",
        "d": true,
        "g": "6f56f9087cf1a1b5",
        "name": "debug 40",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 440,
        "wires": []
    },
    {
        "id": "12721d74f64545cd",
        "type": "inject",
        "z": "8eea00dd0fa2793b",
        "g": "6f56f9087cf1a1b5",
        "name": "Test read",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 320,
        "wires": [
            [
                "d966640ab6f306c5"
            ]
        ]
    },
    {
        "id": "d966640ab6f306c5",
        "type": "OpcUa-Item",
        "z": "8eea00dd0fa2793b",
        "g": "6f56f9087cf1a1b5",
        "item": "br=/Objects/AASROOT/pic118_pid4/OperationalData/Payload/Value",
        "datatype": "String",
        "value": "",
        "name": "",
        "x": 260,
        "y": 320,
        "wires": [
            [
                "127a8a106b628b89"
            ]
        ]
    },
    {
        "id": "127a8a106b628b89",
        "type": "OpcUa-Client",
        "z": "8eea00dd0fa2793b",
        "g": "6f56f9087cf1a1b5",
        "endpoint": "f23add3fd8d371dd",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": 1,
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "Read",
        "x": 410,
        "y": 320,
        "wires": [
            [
                "139c6d4a6cf91524"
            ],
            []
        ]
    },
    {
        "id": "139c6d4a6cf91524",
        "type": "function",
        "z": "8eea00dd0fa2793b",
        "g": "6f56f9087cf1a1b5",
        "name": "stringToJSON",
        "func": "\nlet data = msg.payload; // Assuming msg.payload contains the string \"{}\"\ntry {\n    msg.payload = JSON.parse(data); // Convert the string into a JSON object\n} catch (e) {\n    node.error(\"Invalid JSON format: \" + e);\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 320,
        "wires": [
            [
                "96e14a638f457dc3",
                "12e5d5e70f500e1c"
            ]
        ]
    },
    {
        "id": "96e14a638f457dc3",
        "type": "debug",
        "z": "8eea00dd0fa2793b",
        "g": "6f56f9087cf1a1b5",
        "name": "Parameters",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 320,
        "wires": []
    },
    {
        "id": "12e5d5e70f500e1c",
        "type": "function",
        "z": "8eea00dd0fa2793b",
        "g": "6f56f9087cf1a1b5",
        "name": "Global p2_daq_value",
        "func": "// Armazenar a variável global como número\nflow.set(\"ManipulateVariable\", msg.payload.mv);\nflow.set(\"Error\", msg.payload.error)\nflow.set(\"time\", msg.payload.time)\n\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 360,
        "wires": [
            []
        ]
    }
]